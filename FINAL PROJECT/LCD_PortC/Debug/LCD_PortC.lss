
LCD_PortC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004c  00800200  000013cc  00001460  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000013cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000038  0080024c  0080024c  000014ac  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000014ac  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000014dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  0000151c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000020f5  00000000  00000000  00001614  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fd0  00000000  00000000  00003709  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000fe0  00000000  00000000  000046d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000364  00000000  00000000  000056bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000872  00000000  00000000  00005a20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000eb7  00000000  00000000  00006292  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00007149  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	0c 94 1a 08 	jmp	0x1034	; 0x1034 <__vector_1>
       8:	06 c2       	rjmp	.+1036   	; 0x416 <__vector_2>
       a:	00 00       	nop
       c:	89 c1       	rjmp	.+786    	; 0x320 <__vector_3>
       e:	00 00       	nop
      10:	5c c2       	rjmp	.+1208   	; 0x4ca <__vector_4>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	7c c2       	rjmp	.+1272   	; 0x56e <__vector_29>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	78 c1       	rjmp	.+752    	; 0x372 <__vector_32>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ec ec       	ldi	r30, 0xCC	; 204
      fc:	f3 e1       	ldi	r31, 0x13	; 19
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	ac 34       	cpi	r26, 0x4C	; 76
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	ac e4       	ldi	r26, 0x4C	; 76
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a4 38       	cpi	r26, 0x84	; 132
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	09 d3       	rcall	.+1554   	; 0x732 <main>
     120:	0c 94 e4 09 	jmp	0x13c8	; 0x13c8 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <LCDBusyLoop>:
	//This function waits till lcd is BUSY

	uint8_t busy,status=0x00,temp;

	//Change Port to input type because we are reading data
	LCD_DATA_DDR&=0xF0;
     126:	87 b1       	in	r24, 0x07	; 7
     128:	80 7f       	andi	r24, 0xF0	; 240
     12a:	87 b9       	out	0x07, r24	; 7

	//change LCD mode
	SET_RW();		//Read mode
     12c:	45 9a       	sbi	0x08, 5	; 8
	CLEAR_RS();		//Read status
     12e:	46 98       	cbi	0x08, 6	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     130:	82 e0       	ldi	r24, 0x02	; 2
     132:	8a 95       	dec	r24
     134:	f1 f7       	brne	.-4      	; 0x132 <LCDBusyLoop+0xc>
     136:	00 c0       	rjmp	.+0      	; 0x138 <LCDBusyLoop+0x12>
	_delay_us(0.5);		//tAS
	
	do
	{

		SET_E();
     138:	47 9a       	sbi	0x08, 7	; 8
     13a:	92 e0       	ldi	r25, 0x02	; 2
     13c:	9a 95       	dec	r25
     13e:	f1 f7       	brne	.-4      	; 0x13c <LCDBusyLoop+0x16>
     140:	00 c0       	rjmp	.+0      	; 0x142 <LCDBusyLoop+0x1c>

		//Wait tDA for data to become available
		_delay_us(0.5);
		
		status=LCD_DATA_PIN;
     142:	86 b1       	in	r24, 0x06	; 6
		status=status<<4;
     144:	82 95       	swap	r24
     146:	80 7f       	andi	r24, 0xF0	; 240
     148:	92 e0       	ldi	r25, 0x02	; 2
     14a:	9a 95       	dec	r25
     14c:	f1 f7       	brne	.-4      	; 0x14a <LCDBusyLoop+0x24>
     14e:	00 c0       	rjmp	.+0      	; 0x150 <LCDBusyLoop+0x2a>

		_delay_us(0.5);
		
		//Pull E low
		CLEAR_E();
     150:	47 98       	cbi	0x08, 7	; 8
     152:	95 e0       	ldi	r25, 0x05	; 5
     154:	9a 95       	dec	r25
     156:	f1 f7       	brne	.-4      	; 0x154 <LCDBusyLoop+0x2e>
     158:	00 00       	nop
		_delay_us(1);	//tEL
		
		SET_E();
     15a:	47 9a       	sbi	0x08, 7	; 8
     15c:	92 e0       	ldi	r25, 0x02	; 2
     15e:	9a 95       	dec	r25
     160:	f1 f7       	brne	.-4      	; 0x15e <LCDBusyLoop+0x38>
     162:	00 c0       	rjmp	.+0      	; 0x164 <LCDBusyLoop+0x3e>
		_delay_us(0.5);
		
		temp=LCD_DATA_PIN;
     164:	96 b1       	in	r25, 0x06	; 6
     166:	92 e0       	ldi	r25, 0x02	; 2
     168:	9a 95       	dec	r25
     16a:	f1 f7       	brne	.-4      	; 0x168 <LCDBusyLoop+0x42>
     16c:	00 c0       	rjmp	.+0      	; 0x16e <LCDBusyLoop+0x48>

		busy=status & 0b10000000;

		_delay_us(0.5);
		
		CLEAR_E();
     16e:	47 98       	cbi	0x08, 7	; 8
     170:	95 e0       	ldi	r25, 0x05	; 5
     172:	9a 95       	dec	r25
     174:	f1 f7       	brne	.-4      	; 0x172 <LCDBusyLoop+0x4c>
     176:	00 00       	nop
		_delay_us(1);	//tEL
		
	}while(busy);
     178:	88 23       	and	r24, r24
     17a:	f4 f2       	brlt	.-68     	; 0x138 <LCDBusyLoop+0x12>

	CLEAR_RW();		//write mode
     17c:	45 98       	cbi	0x08, 5	; 8
	//Change Port to output
	LCD_DATA_DDR|=0x0F;
     17e:	87 b1       	in	r24, 0x07	; 7
     180:	8f 60       	ori	r24, 0x0F	; 15
     182:	87 b9       	out	0x07, r24	; 7
     184:	08 95       	ret

00000186 <LCDByte>:
//NOTE: THIS FUNCTION RETURS ONLY WHEN LCD HAS PROCESSED THE COMMAND

uint8_t hn,ln;			//Nibbles
uint8_t temp;

hn=c>>4;
     186:	28 2f       	mov	r18, r24
     188:	22 95       	swap	r18
     18a:	2f 70       	andi	r18, 0x0F	; 15
ln=(c & 0x0F);
     18c:	8f 70       	andi	r24, 0x0F	; 15

if(isdata==0)
     18e:	61 11       	cpse	r22, r1
     190:	02 c0       	rjmp	.+4      	; 0x196 <LCDByte+0x10>
	CLEAR_RS();
     192:	46 98       	cbi	0x08, 6	; 8
     194:	01 c0       	rjmp	.+2      	; 0x198 <LCDByte+0x12>
else
	SET_RS();
     196:	46 9a       	sbi	0x08, 6	; 8
     198:	92 e0       	ldi	r25, 0x02	; 2
     19a:	9a 95       	dec	r25
     19c:	f1 f7       	brne	.-4      	; 0x19a <LCDByte+0x14>
     19e:	00 c0       	rjmp	.+0      	; 0x1a0 <LCDByte+0x1a>

_delay_us(0.500);		//tAS


SET_E();
     1a0:	47 9a       	sbi	0x08, 7	; 8

//Send high nibble

temp=(LCD_DATA_PORT & 0XF0)|(hn);
     1a2:	98 b1       	in	r25, 0x08	; 8
     1a4:	90 7f       	andi	r25, 0xF0	; 240
     1a6:	92 2b       	or	r25, r18
LCD_DATA_PORT=temp;
     1a8:	98 b9       	out	0x08, r25	; 8
     1aa:	95 e0       	ldi	r25, 0x05	; 5
     1ac:	9a 95       	dec	r25
     1ae:	f1 f7       	brne	.-4      	; 0x1ac <LCDByte+0x26>
     1b0:	00 00       	nop
_delay_us(1);			//tEH


//Now data lines are stable pull E low for transmission

CLEAR_E();
     1b2:	47 98       	cbi	0x08, 7	; 8
     1b4:	95 e0       	ldi	r25, 0x05	; 5
     1b6:	9a 95       	dec	r25
     1b8:	f1 f7       	brne	.-4      	; 0x1b6 <LCDByte+0x30>
     1ba:	00 00       	nop

_delay_us(1);

//Send the lower nibble
SET_E();
     1bc:	47 9a       	sbi	0x08, 7	; 8

temp=(LCD_DATA_PORT & 0XF0)|(ln);
     1be:	98 b1       	in	r25, 0x08	; 8
     1c0:	90 7f       	andi	r25, 0xF0	; 240
     1c2:	89 2b       	or	r24, r25

LCD_DATA_PORT=temp;
     1c4:	88 b9       	out	0x08, r24	; 8
     1c6:	85 e0       	ldi	r24, 0x05	; 5
     1c8:	8a 95       	dec	r24
     1ca:	f1 f7       	brne	.-4      	; 0x1c8 <LCDByte+0x42>
     1cc:	00 00       	nop
_delay_us(1);			//tEH
						//Do not wait too long, 1 us is good

//SEND

CLEAR_E();
     1ce:	47 98       	cbi	0x08, 7	; 8
     1d0:	95 e0       	ldi	r25, 0x05	; 5
     1d2:	9a 95       	dec	r25
     1d4:	f1 f7       	brne	.-4      	; 0x1d2 <LCDByte+0x4c>
     1d6:	00 00       	nop

_delay_us(1);			//tEL

LCDBusyLoop();
     1d8:	a6 cf       	rjmp	.-180    	; 0x126 <LCDBusyLoop>
     1da:	08 95       	ret

000001dc <InitLCD>:
	LCD_DATA_DDR|=0x0F;

}

void InitLCD(uint8_t style)
{
     1dc:	cf 93       	push	r28
     1de:	c8 2f       	mov	r28, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1e0:	2f ef       	ldi	r18, 0xFF	; 255
     1e2:	86 e7       	ldi	r24, 0x76	; 118
     1e4:	91 e0       	ldi	r25, 0x01	; 1
     1e6:	21 50       	subi	r18, 0x01	; 1
     1e8:	80 40       	sbci	r24, 0x00	; 0
     1ea:	90 40       	sbci	r25, 0x00	; 0
     1ec:	e1 f7       	brne	.-8      	; 0x1e6 <InitLCD+0xa>
     1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <InitLCD+0x14>
     1f0:	00 00       	nop
	
	//After power on Wait for LCD to Initialize
	_delay_ms(30);
		
	//Set IO Ports
	LCD_DATA_DDR|=(0x0F);
     1f2:	87 b1       	in	r24, 0x07	; 7
     1f4:	8f 60       	ori	r24, 0x0F	; 15
     1f6:	87 b9       	out	0x07, r24	; 7
	LCD_E_DDR|=(1<<LCD_E_POS);
     1f8:	3f 9a       	sbi	0x07, 7	; 7
	LCD_RS_DDR|=(1<<LCD_RS_POS);
     1fa:	3e 9a       	sbi	0x07, 6	; 7
	LCD_RW_DDR|=(1<<LCD_RW_POS);
     1fc:	3d 9a       	sbi	0x07, 5	; 7

	LCD_DATA_PORT&=0XF0;
     1fe:	88 b1       	in	r24, 0x08	; 8
     200:	80 7f       	andi	r24, 0xF0	; 240
     202:	88 b9       	out	0x08, r24	; 8
	CLEAR_E();
     204:	47 98       	cbi	0x08, 7	; 8
	CLEAR_RW();
     206:	45 98       	cbi	0x08, 5	; 8
	CLEAR_RS();
     208:	46 98       	cbi	0x08, 6	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     20a:	00 c0       	rjmp	.+0      	; 0x20c <InitLCD+0x30>
     20c:	00 c0       	rjmp	.+0      	; 0x20e <InitLCD+0x32>
     20e:	00 00       	nop

	//Set 4-bit mode
	_delay_us(0.3);	//tAS
	
	SET_E();
     210:	47 9a       	sbi	0x08, 7	; 8
	LCD_DATA_PORT|=(0b00000010); //[B] To transfer 0b00100000 i was using LCD_DATA_PORT|=0b00100000
     212:	41 9a       	sbi	0x08, 1	; 8
     214:	25 e0       	ldi	r18, 0x05	; 5
     216:	2a 95       	dec	r18
     218:	f1 f7       	brne	.-4      	; 0x216 <InitLCD+0x3a>
     21a:	00 00       	nop
	_delay_us(1);
	
	CLEAR_E();
     21c:	47 98       	cbi	0x08, 7	; 8
     21e:	85 e0       	ldi	r24, 0x05	; 5
     220:	8a 95       	dec	r24
     222:	f1 f7       	brne	.-4      	; 0x220 <InitLCD+0x44>
     224:	00 00       	nop
	_delay_us(1);
		
	//Wait for LCD to execute the Functionset Command
	LCDBusyLoop();                                    //[B] Forgot this delay
     226:	7f df       	rcall	.-258    	; 0x126 <LCDBusyLoop>

	//Now the LCD is in 4-bit mode

	LCDCmd(0b00001100|style);	//Display On
     228:	60 e0       	ldi	r22, 0x00	; 0
     22a:	8c 2f       	mov	r24, r28
     22c:	8c 60       	ori	r24, 0x0C	; 12
     22e:	ab df       	rcall	.-170    	; 0x186 <LCDByte>
	LCDCmd(0b00101000);			//function set 4-bit,2 line 5x7 dot format
     230:	60 e0       	ldi	r22, 0x00	; 0
     232:	88 e2       	ldi	r24, 0x28	; 40
     234:	a8 df       	rcall	.-176    	; 0x186 <LCDByte>
}
     236:	cf 91       	pop	r28
     238:	08 95       	ret

0000023a <LCDWriteString>:
void LCDWriteString(const char *msg)
{
     23a:	cf 93       	push	r28
     23c:	df 93       	push	r29
     23e:	ec 01       	movw	r28, r24
	Arguments:
	msg: a null terminated string to print


	*****************************************************************/
 while(*msg!='\0')
     240:	88 81       	ld	r24, Y
     242:	88 23       	and	r24, r24
     244:	31 f0       	breq	.+12     	; 0x252 <LCDWriteString+0x18>
     246:	21 96       	adiw	r28, 0x01	; 1
 {
	LCDData(*msg);
     248:	61 e0       	ldi	r22, 0x01	; 1
     24a:	9d df       	rcall	.-198    	; 0x186 <LCDByte>
	Arguments:
	msg: a null terminated string to print


	*****************************************************************/
 while(*msg!='\0')
     24c:	89 91       	ld	r24, Y+
     24e:	81 11       	cpse	r24, r1
     250:	fb cf       	rjmp	.-10     	; 0x248 <LCDWriteString+0xe>
 {
	LCDData(*msg);
	msg++;
 }
}
     252:	df 91       	pop	r29
     254:	cf 91       	pop	r28
     256:	08 95       	ret

00000258 <LCDWriteInt>:

void LCDWriteInt(int val,unsigned int field_length)
{
     258:	ef 92       	push	r14
     25a:	ff 92       	push	r15
     25c:	0f 93       	push	r16
     25e:	1f 93       	push	r17
     260:	cf 93       	push	r28
     262:	df 93       	push	r29
     264:	00 d0       	rcall	.+0      	; 0x266 <LCDWriteInt+0xe>
     266:	1f 92       	push	r1
     268:	1f 92       	push	r1
     26a:	cd b7       	in	r28, 0x3d	; 61
     26c:	de b7       	in	r29, 0x3e	; 62
     26e:	7b 01       	movw	r14, r22
	2)unsigned int field_length :total length of field in which the value is printed
	must be between 1-5 if it is -1 the field length is no of digits in the val

	****************************************************************/

	char str[5]={0,0,0,0,0};
     270:	fe 01       	movw	r30, r28
     272:	31 96       	adiw	r30, 0x01	; 1
     274:	25 e0       	ldi	r18, 0x05	; 5
     276:	df 01       	movw	r26, r30
     278:	1d 92       	st	X+, r1
     27a:	2a 95       	dec	r18
     27c:	e9 f7       	brne	.-6      	; 0x278 <LCDWriteInt+0x20>
	int i=4,j=0;
	while(val)
     27e:	00 97       	sbiw	r24, 0x00	; 0
     280:	51 f0       	breq	.+20     	; 0x296 <LCDWriteInt+0x3e>
     282:	35 96       	adiw	r30, 0x05	; 5
	{
	str[i]=val%10;
     284:	2a e0       	ldi	r18, 0x0A	; 10
     286:	30 e0       	ldi	r19, 0x00	; 0
     288:	b9 01       	movw	r22, r18
     28a:	56 d7       	rcall	.+3756   	; 0x1138 <__divmodhi4>
     28c:	82 93       	st	-Z, r24
	val=val/10;
     28e:	86 2f       	mov	r24, r22
     290:	97 2f       	mov	r25, r23

	****************************************************************/

	char str[5]={0,0,0,0,0};
	int i=4,j=0;
	while(val)
     292:	00 97       	sbiw	r24, 0x00	; 0
     294:	c9 f7       	brne	.-14     	; 0x288 <LCDWriteInt+0x30>
	{
	str[i]=val%10;
	val=val/10;
	i--;
	}
	if(field_length==-1)
     296:	bf ef       	ldi	r27, 0xFF	; 255
     298:	eb 16       	cp	r14, r27
     29a:	fb 06       	cpc	r15, r27
     29c:	69 f4       	brne	.+26     	; 0x2b8 <LCDWriteInt+0x60>
		while(str[j]==0) j++;
     29e:	89 81       	ldd	r24, Y+1	; 0x01
     2a0:	81 11       	cpse	r24, r1
     2a2:	1d c0       	rjmp	.+58     	; 0x2de <LCDWriteInt+0x86>
     2a4:	fe 01       	movw	r30, r28
     2a6:	32 96       	adiw	r30, 0x02	; 2
     2a8:	00 e0       	ldi	r16, 0x00	; 0
     2aa:	10 e0       	ldi	r17, 0x00	; 0
     2ac:	0f 5f       	subi	r16, 0xFF	; 255
     2ae:	1f 4f       	sbci	r17, 0xFF	; 255
     2b0:	81 91       	ld	r24, Z+
     2b2:	88 23       	and	r24, r24
     2b4:	d9 f3       	breq	.-10     	; 0x2ac <LCDWriteInt+0x54>
     2b6:	0f c0       	rjmp	.+30     	; 0x2d6 <LCDWriteInt+0x7e>
	else
		j=5-field_length;
     2b8:	05 e0       	ldi	r16, 0x05	; 5
     2ba:	10 e0       	ldi	r17, 0x00	; 0
     2bc:	0e 19       	sub	r16, r14
     2be:	1f 09       	sbc	r17, r15
     2c0:	0a c0       	rjmp	.+20     	; 0x2d6 <LCDWriteInt+0x7e>

	if(val<0) LCDData('-');
	for(i=j;i<5;i++)
	{
	LCDData(48+str[i]);
     2c2:	f8 01       	movw	r30, r16
     2c4:	81 91       	ld	r24, Z+
     2c6:	8f 01       	movw	r16, r30
     2c8:	61 e0       	ldi	r22, 0x01	; 1
     2ca:	80 5d       	subi	r24, 0xD0	; 208
     2cc:	5c df       	rcall	.-328    	; 0x186 <LCDByte>
		while(str[j]==0) j++;
	else
		j=5-field_length;

	if(val<0) LCDData('-');
	for(i=j;i<5;i++)
     2ce:	0e 15       	cp	r16, r14
     2d0:	1f 05       	cpc	r17, r15
     2d2:	b9 f7       	brne	.-18     	; 0x2c2 <LCDWriteInt+0x6a>
     2d4:	11 c0       	rjmp	.+34     	; 0x2f8 <LCDWriteInt+0xa0>
     2d6:	05 30       	cpi	r16, 0x05	; 5
     2d8:	11 05       	cpc	r17, r1
     2da:	1c f0       	brlt	.+6      	; 0x2e2 <LCDWriteInt+0x8a>
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <LCDWriteInt+0xa0>
	str[i]=val%10;
	val=val/10;
	i--;
	}
	if(field_length==-1)
		while(str[j]==0) j++;
     2de:	00 e0       	ldi	r16, 0x00	; 0
     2e0:	10 e0       	ldi	r17, 0x00	; 0
     2e2:	81 e0       	ldi	r24, 0x01	; 1
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	8c 0f       	add	r24, r28
     2e8:	9d 1f       	adc	r25, r29
     2ea:	08 0f       	add	r16, r24
     2ec:	19 1f       	adc	r17, r25
     2ee:	7e 01       	movw	r14, r28
     2f0:	96 e0       	ldi	r25, 0x06	; 6
     2f2:	e9 0e       	add	r14, r25
     2f4:	f1 1c       	adc	r15, r1
     2f6:	e5 cf       	rjmp	.-54     	; 0x2c2 <LCDWriteInt+0x6a>
	if(val<0) LCDData('-');
	for(i=j;i<5;i++)
	{
	LCDData(48+str[i]);
	}
}
     2f8:	0f 90       	pop	r0
     2fa:	0f 90       	pop	r0
     2fc:	0f 90       	pop	r0
     2fe:	0f 90       	pop	r0
     300:	0f 90       	pop	r0
     302:	df 91       	pop	r29
     304:	cf 91       	pop	r28
     306:	1f 91       	pop	r17
     308:	0f 91       	pop	r16
     30a:	ff 90       	pop	r15
     30c:	ef 90       	pop	r14
     30e:	08 95       	ret

00000310 <LCDGotoXY>:
void LCDGotoXY(uint8_t x,uint8_t y)
{
 if(x<40)
     310:	88 32       	cpi	r24, 0x28	; 40
     312:	28 f4       	brcc	.+10     	; 0x31e <LCDGotoXY+0xe>
 {
  if(y) x|=0b01000000;
     314:	61 11       	cpse	r22, r1
     316:	80 64       	ori	r24, 0x40	; 64
  x|=0b10000000;
  LCDCmd(x);
     318:	60 e0       	ldi	r22, 0x00	; 0
     31a:	80 68       	ori	r24, 0x80	; 128
     31c:	34 cf       	rjmp	.-408    	; 0x186 <LCDByte>
     31e:	08 95       	ret

00000320 <__vector_3>:
*/
/* Check to see if the queue is empty */
char isEmpty(link **h){
	/* ENTER YOUR CODE HERE */
	return(*h == NULL);
}/*isEmpty*/
     320:	1f 92       	push	r1
     322:	0f 92       	push	r0
     324:	0f b6       	in	r0, 0x3f	; 63
     326:	0f 92       	push	r0
     328:	11 24       	eor	r1, r1
     32a:	8f 93       	push	r24
     32c:	9f 93       	push	r25
     32e:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <stepperStageFlag>
     332:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <stepperStageFlag+0x1>
     336:	89 2b       	or	r24, r25
     338:	69 f4       	brne	.+26     	; 0x354 <__vector_3+0x34>
     33a:	8f e0       	ldi	r24, 0x0F	; 15
     33c:	85 b9       	out	0x05, r24	; 5
     33e:	81 e0       	ldi	r24, 0x01	; 1
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	90 93 4f 02 	sts	0x024F, r25	; 0x80024f <INT2_result_flag+0x1>
     346:	80 93 4e 02 	sts	0x024E, r24	; 0x80024e <INT2_result_flag>
     34a:	90 93 6b 02 	sts	0x026B, r25	; 0x80026b <stepperStageFlag+0x1>
     34e:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <stepperStageFlag>
     352:	08 c0       	rjmp	.+16     	; 0x364 <__vector_3+0x44>
     354:	8f e0       	ldi	r24, 0x0F	; 15
     356:	85 b9       	out	0x05, r24	; 5
     358:	81 e0       	ldi	r24, 0x01	; 1
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	90 93 7d 02 	sts	0x027D, r25	; 0x80027d <stepsLeft+0x1>
     360:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <stepsLeft>
     364:	9f 91       	pop	r25
     366:	8f 91       	pop	r24
     368:	0f 90       	pop	r0
     36a:	0f be       	out	0x3f, r0	; 63
     36c:	0f 90       	pop	r0
     36e:	1f 90       	pop	r1
     370:	18 95       	reti

00000372 <__vector_32>:
     372:	1f 92       	push	r1
     374:	0f 92       	push	r0
     376:	0f b6       	in	r0, 0x3f	; 63
     378:	0f 92       	push	r0
     37a:	11 24       	eor	r1, r1
     37c:	0b b6       	in	r0, 0x3b	; 59
     37e:	0f 92       	push	r0
     380:	8f 93       	push	r24
     382:	9f 93       	push	r25
     384:	ef 93       	push	r30
     386:	ff 93       	push	r31
     388:	81 e0       	ldi	r24, 0x01	; 1
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	90 93 4d 02 	sts	0x024D, r25	; 0x80024d <__data_end+0x1>
     390:	80 93 4c 02 	sts	0x024C, r24	; 0x80024c <__data_end>
     394:	e1 e7       	ldi	r30, 0x71	; 113
     396:	f0 e0       	ldi	r31, 0x00	; 0
     398:	80 81       	ld	r24, Z
     39a:	8d 7f       	andi	r24, 0xFD	; 253
     39c:	80 83       	st	Z, r24
     39e:	ff 91       	pop	r31
     3a0:	ef 91       	pop	r30
     3a2:	9f 91       	pop	r25
     3a4:	8f 91       	pop	r24
     3a6:	0f 90       	pop	r0
     3a8:	0b be       	out	0x3b, r0	; 59
     3aa:	0f 90       	pop	r0
     3ac:	0f be       	out	0x3f, r0	; 63
     3ae:	0f 90       	pop	r0
     3b0:	1f 90       	pop	r1
     3b2:	18 95       	reti

000003b4 <PWMgen>:
     3b4:	84 b5       	in	r24, 0x24	; 36
     3b6:	83 60       	ori	r24, 0x03	; 3
     3b8:	84 bd       	out	0x24, r24	; 36
     3ba:	84 b5       	in	r24, 0x24	; 36
     3bc:	80 68       	ori	r24, 0x80	; 128
     3be:	84 bd       	out	0x24, r24	; 36
     3c0:	85 b5       	in	r24, 0x25	; 37
     3c2:	83 60       	ori	r24, 0x03	; 3
     3c4:	85 bd       	out	0x25, r24	; 37
     3c6:	86 e6       	ldi	r24, 0x66	; 102
     3c8:	87 bd       	out	0x27, r24	; 39
     3ca:	8f ef       	ldi	r24, 0xFF	; 255
     3cc:	84 b9       	out	0x04, r24	; 4
     3ce:	08 95       	ret

000003d0 <mTimer>:
     3d0:	ac 01       	movw	r20, r24
     3d2:	e1 e8       	ldi	r30, 0x81	; 129
     3d4:	f0 e0       	ldi	r31, 0x00	; 0
     3d6:	90 81       	ld	r25, Z
     3d8:	92 60       	ori	r25, 0x02	; 2
     3da:	90 83       	st	Z, r25
     3dc:	90 81       	ld	r25, Z
     3de:	98 60       	ori	r25, 0x08	; 8
     3e0:	90 83       	st	Z, r25
     3e2:	88 ee       	ldi	r24, 0xE8	; 232
     3e4:	93 e0       	ldi	r25, 0x03	; 3
     3e6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     3ea:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     3ee:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     3f2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     3f6:	b1 9a       	sbi	0x16, 1	; 22
     3f8:	20 e0       	ldi	r18, 0x00	; 0
     3fa:	30 e0       	ldi	r19, 0x00	; 0
     3fc:	05 c0       	rjmp	.+10     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     3fe:	b1 9b       	sbis	0x16, 1	; 22
     400:	fe cf       	rjmp	.-4      	; 0x3fe <mTimer+0x2e>
     402:	b1 9a       	sbi	0x16, 1	; 22
     404:	2f 5f       	subi	r18, 0xFF	; 255
     406:	3f 4f       	sbci	r19, 0xFF	; 255
     408:	24 17       	cp	r18, r20
     40a:	35 07       	cpc	r19, r21
     40c:	1c f4       	brge	.+6      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     40e:	b1 9b       	sbis	0x16, 1	; 22
     410:	f6 cf       	rjmp	.-20     	; 0x3fe <mTimer+0x2e>
     412:	f7 cf       	rjmp	.-18     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     414:	08 95       	ret

00000416 <__vector_2>:
     416:	1f 92       	push	r1
     418:	0f 92       	push	r0
     41a:	0f b6       	in	r0, 0x3f	; 63
     41c:	0f 92       	push	r0
     41e:	11 24       	eor	r1, r1
     420:	0b b6       	in	r0, 0x3b	; 59
     422:	0f 92       	push	r0
     424:	2f 93       	push	r18
     426:	3f 93       	push	r19
     428:	4f 93       	push	r20
     42a:	5f 93       	push	r21
     42c:	6f 93       	push	r22
     42e:	7f 93       	push	r23
     430:	8f 93       	push	r24
     432:	9f 93       	push	r25
     434:	af 93       	push	r26
     436:	bf 93       	push	r27
     438:	ef 93       	push	r30
     43a:	ff 93       	push	r31
     43c:	84 e1       	ldi	r24, 0x14	; 20
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	c7 df       	rcall	.-114    	; 0x3d0 <mTimer>
     442:	89 b1       	in	r24, 0x09	; 9
     444:	81 e0       	ldi	r24, 0x01	; 1
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	90 93 73 02 	sts	0x0273, r25	; 0x800273 <eStop+0x1>
     44c:	80 93 72 02 	sts	0x0272, r24	; 0x800272 <eStop>
     450:	89 b1       	in	r24, 0x09	; 9
     452:	84 e1       	ldi	r24, 0x14	; 20
     454:	90 e0       	ldi	r25, 0x00	; 0
     456:	bc df       	rcall	.-136    	; 0x3d0 <mTimer>
     458:	ff 91       	pop	r31
     45a:	ef 91       	pop	r30
     45c:	bf 91       	pop	r27
     45e:	af 91       	pop	r26
     460:	9f 91       	pop	r25
     462:	8f 91       	pop	r24
     464:	7f 91       	pop	r23
     466:	6f 91       	pop	r22
     468:	5f 91       	pop	r21
     46a:	4f 91       	pop	r20
     46c:	3f 91       	pop	r19
     46e:	2f 91       	pop	r18
     470:	0f 90       	pop	r0
     472:	0b be       	out	0x3b, r0	; 59
     474:	0f 90       	pop	r0
     476:	0f be       	out	0x3f, r0	; 63
     478:	0f 90       	pop	r0
     47a:	1f 90       	pop	r1
     47c:	18 95       	reti

0000047e <crankTimer>:
     47e:	9c 01       	movw	r18, r24
     480:	e1 e9       	ldi	r30, 0x91	; 145
     482:	f0 e0       	ldi	r31, 0x00	; 0
     484:	90 81       	ld	r25, Z
     486:	98 60       	ori	r25, 0x08	; 8
     488:	90 83       	st	Z, r25
     48a:	30 93 99 00 	sts	0x0099, r19	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     48e:	20 93 98 00 	sts	0x0098, r18	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
     492:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     496:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
     49a:	c1 9a       	sbi	0x18, 1	; 24
     49c:	a1 e7       	ldi	r26, 0x71	; 113
     49e:	b0 e0       	ldi	r27, 0x00	; 0
     4a0:	8c 91       	ld	r24, X
     4a2:	82 60       	ori	r24, 0x02	; 2
     4a4:	8c 93       	st	X, r24
     4a6:	80 81       	ld	r24, Z
     4a8:	82 60       	ori	r24, 0x02	; 2
     4aa:	80 83       	st	Z, r24
     4ac:	08 95       	ret

000004ae <initLink>:
     4ae:	cf 93       	push	r28
     4b0:	df 93       	push	r29
     4b2:	ec 01       	movw	r28, r24
     4b4:	84 e0       	ldi	r24, 0x04	; 4
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	66 d6       	rcall	.+3276   	; 0x1186 <malloc>
     4ba:	99 83       	std	Y+1, r25	; 0x01
     4bc:	88 83       	st	Y, r24
     4be:	fc 01       	movw	r30, r24
     4c0:	13 82       	std	Z+3, r1	; 0x03
     4c2:	12 82       	std	Z+2, r1	; 0x02
     4c4:	df 91       	pop	r29
     4c6:	cf 91       	pop	r28
     4c8:	08 95       	ret

000004ca <__vector_4>:
     4ca:	1f 92       	push	r1
     4cc:	0f 92       	push	r0
     4ce:	0f b6       	in	r0, 0x3f	; 63
     4d0:	0f 92       	push	r0
     4d2:	11 24       	eor	r1, r1
     4d4:	0b b6       	in	r0, 0x3b	; 59
     4d6:	0f 92       	push	r0
     4d8:	2f 93       	push	r18
     4da:	3f 93       	push	r19
     4dc:	4f 93       	push	r20
     4de:	5f 93       	push	r21
     4e0:	6f 93       	push	r22
     4e2:	7f 93       	push	r23
     4e4:	8f 93       	push	r24
     4e6:	9f 93       	push	r25
     4e8:	af 93       	push	r26
     4ea:	bf 93       	push	r27
     4ec:	ef 93       	push	r30
     4ee:	ff 93       	push	r31
     4f0:	ea e7       	ldi	r30, 0x7A	; 122
     4f2:	f0 e0       	ldi	r31, 0x00	; 0
     4f4:	80 81       	ld	r24, Z
     4f6:	80 64       	ori	r24, 0x40	; 64
     4f8:	80 83       	st	Z, r24
     4fa:	80 e0       	ldi	r24, 0x00	; 0
     4fc:	94 e0       	ldi	r25, 0x04	; 4
     4fe:	90 93 59 02 	sts	0x0259, r25	; 0x800259 <minVal+0x1>
     502:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <minVal>
     506:	8c e6       	ldi	r24, 0x6C	; 108
     508:	92 e0       	ldi	r25, 0x02	; 2
     50a:	d1 df       	rcall	.-94     	; 0x4ae <initLink>
     50c:	ff 91       	pop	r31
     50e:	ef 91       	pop	r30
     510:	bf 91       	pop	r27
     512:	af 91       	pop	r26
     514:	9f 91       	pop	r25
     516:	8f 91       	pop	r24
     518:	7f 91       	pop	r23
     51a:	6f 91       	pop	r22
     51c:	5f 91       	pop	r21
     51e:	4f 91       	pop	r20
     520:	3f 91       	pop	r19
     522:	2f 91       	pop	r18
     524:	0f 90       	pop	r0
     526:	0b be       	out	0x3b, r0	; 59
     528:	0f 90       	pop	r0
     52a:	0f be       	out	0x3f, r0	; 63
     52c:	0f 90       	pop	r0
     52e:	1f 90       	pop	r1
     530:	18 95       	reti

00000532 <enqueue>:
     532:	db 01       	movw	r26, r22
     534:	ed 91       	ld	r30, X+
     536:	fc 91       	ld	r31, X
     538:	30 97       	sbiw	r30, 0x00	; 0
     53a:	61 f0       	breq	.+24     	; 0x554 <enqueue+0x22>
     53c:	da 01       	movw	r26, r20
     53e:	8d 91       	ld	r24, X+
     540:	9c 91       	ld	r25, X
     542:	11 97       	sbiw	r26, 0x01	; 1
     544:	93 83       	std	Z+3, r25	; 0x03
     546:	82 83       	std	Z+2, r24	; 0x02
     548:	8d 91       	ld	r24, X+
     54a:	9c 91       	ld	r25, X
     54c:	fb 01       	movw	r30, r22
     54e:	91 83       	std	Z+1, r25	; 0x01
     550:	80 83       	st	Z, r24
     552:	08 95       	ret
     554:	da 01       	movw	r26, r20
     556:	2d 91       	ld	r18, X+
     558:	3c 91       	ld	r19, X
     55a:	11 97       	sbiw	r26, 0x01	; 1
     55c:	fc 01       	movw	r30, r24
     55e:	31 83       	std	Z+1, r19	; 0x01
     560:	20 83       	st	Z, r18
     562:	8d 91       	ld	r24, X+
     564:	9c 91       	ld	r25, X
     566:	db 01       	movw	r26, r22
     568:	8d 93       	st	X+, r24
     56a:	9c 93       	st	X, r25
     56c:	08 95       	ret

0000056e <__vector_29>:
     56e:	1f 92       	push	r1
     570:	0f 92       	push	r0
     572:	0f b6       	in	r0, 0x3f	; 63
     574:	0f 92       	push	r0
     576:	11 24       	eor	r1, r1
     578:	0b b6       	in	r0, 0x3b	; 59
     57a:	0f 92       	push	r0
     57c:	2f 93       	push	r18
     57e:	3f 93       	push	r19
     580:	4f 93       	push	r20
     582:	5f 93       	push	r21
     584:	6f 93       	push	r22
     586:	7f 93       	push	r23
     588:	8f 93       	push	r24
     58a:	9f 93       	push	r25
     58c:	af 93       	push	r26
     58e:	bf 93       	push	r27
     590:	ef 93       	push	r30
     592:	ff 93       	push	r31
     594:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
     598:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
     59c:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <minVal>
     5a0:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <minVal+0x1>
     5a4:	82 17       	cp	r24, r18
     5a6:	93 07       	cpc	r25, r19
     5a8:	40 f0       	brcs	.+16     	; 0x5ba <__vector_29+0x4c>
     5aa:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
     5ae:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
     5b2:	90 93 59 02 	sts	0x0259, r25	; 0x800259 <minVal+0x1>
     5b6:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <minVal>
     5ba:	4b 9b       	sbis	0x09, 3	; 9
     5bc:	0c c0       	rjmp	.+24     	; 0x5d6 <__vector_29+0x68>
     5be:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <INT2_result_flag>
     5c2:	90 91 4f 02 	lds	r25, 0x024F	; 0x80024f <INT2_result_flag+0x1>
     5c6:	89 2b       	or	r24, r25
     5c8:	31 f4       	brne	.+12     	; 0x5d6 <__vector_29+0x68>
     5ca:	ea e7       	ldi	r30, 0x7A	; 122
     5cc:	f0 e0       	ldi	r31, 0x00	; 0
     5ce:	80 81       	ld	r24, Z
     5d0:	80 64       	ori	r24, 0x40	; 64
     5d2:	80 83       	st	Z, r24
     5d4:	85 c0       	rjmp	.+266    	; 0x6e0 <__vector_29+0x172>
     5d6:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <minVal>
     5da:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <minVal+0x1>
     5de:	83 39       	cpi	r24, 0x93	; 147
     5e0:	93 40       	sbci	r25, 0x03	; 3
     5e2:	b8 f0       	brcs	.+46     	; 0x612 <__vector_29+0xa4>
     5e4:	85 e0       	ldi	r24, 0x05	; 5
     5e6:	90 e0       	ldi	r25, 0x00	; 0
     5e8:	90 93 6f 02 	sts	0x026F, r25	; 0x80026f <mat+0x1>
     5ec:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <mat>
     5f0:	e0 91 6c 02 	lds	r30, 0x026C	; 0x80026c <newLink>
     5f4:	f0 91 6d 02 	lds	r31, 0x026D	; 0x80026d <newLink+0x1>
     5f8:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <mat>
     5fc:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <mat+0x1>
     600:	80 83       	st	Z, r24
     602:	4c e6       	ldi	r20, 0x6C	; 108
     604:	52 e0       	ldi	r21, 0x02	; 2
     606:	6a e5       	ldi	r22, 0x5A	; 90
     608:	72 e0       	ldi	r23, 0x02	; 2
     60a:	82 e6       	ldi	r24, 0x62	; 98
     60c:	92 e0       	ldi	r25, 0x02	; 2
     60e:	91 df       	rcall	.-222    	; 0x532 <enqueue>
     610:	67 c0       	rjmp	.+206    	; 0x6e0 <__vector_29+0x172>
     612:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <minVal>
     616:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <minVal+0x1>
     61a:	8e 3e       	cpi	r24, 0xEE	; 238
     61c:	92 40       	sbci	r25, 0x02	; 2
     61e:	f0 f0       	brcs	.+60     	; 0x65c <__vector_29+0xee>
     620:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <minVal>
     624:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <minVal+0x1>
     628:	83 39       	cpi	r24, 0x93	; 147
     62a:	93 40       	sbci	r25, 0x03	; 3
     62c:	b8 f4       	brcc	.+46     	; 0x65c <__vector_29+0xee>
     62e:	86 e0       	ldi	r24, 0x06	; 6
     630:	90 e0       	ldi	r25, 0x00	; 0
     632:	90 93 6f 02 	sts	0x026F, r25	; 0x80026f <mat+0x1>
     636:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <mat>
     63a:	e0 91 6c 02 	lds	r30, 0x026C	; 0x80026c <newLink>
     63e:	f0 91 6d 02 	lds	r31, 0x026D	; 0x80026d <newLink+0x1>
     642:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <mat>
     646:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <mat+0x1>
     64a:	80 83       	st	Z, r24
     64c:	4c e6       	ldi	r20, 0x6C	; 108
     64e:	52 e0       	ldi	r21, 0x02	; 2
     650:	6a e5       	ldi	r22, 0x5A	; 90
     652:	72 e0       	ldi	r23, 0x02	; 2
     654:	82 e6       	ldi	r24, 0x62	; 98
     656:	92 e0       	ldi	r25, 0x02	; 2
     658:	6c df       	rcall	.-296    	; 0x532 <enqueue>
     65a:	42 c0       	rjmp	.+132    	; 0x6e0 <__vector_29+0x172>
     65c:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <minVal>
     660:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <minVal+0x1>
     664:	8e 3e       	cpi	r24, 0xEE	; 238
     666:	92 40       	sbci	r25, 0x02	; 2
     668:	f0 f4       	brcc	.+60     	; 0x6a6 <__vector_29+0x138>
     66a:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <minVal>
     66e:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <minVal+0x1>
     672:	8d 32       	cpi	r24, 0x2D	; 45
     674:	91 40       	sbci	r25, 0x01	; 1
     676:	b8 f0       	brcs	.+46     	; 0x6a6 <__vector_29+0x138>
     678:	87 e0       	ldi	r24, 0x07	; 7
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	90 93 6f 02 	sts	0x026F, r25	; 0x80026f <mat+0x1>
     680:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <mat>
     684:	e0 91 6c 02 	lds	r30, 0x026C	; 0x80026c <newLink>
     688:	f0 91 6d 02 	lds	r31, 0x026D	; 0x80026d <newLink+0x1>
     68c:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <mat>
     690:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <mat+0x1>
     694:	80 83       	st	Z, r24
     696:	4c e6       	ldi	r20, 0x6C	; 108
     698:	52 e0       	ldi	r21, 0x02	; 2
     69a:	6a e5       	ldi	r22, 0x5A	; 90
     69c:	72 e0       	ldi	r23, 0x02	; 2
     69e:	82 e6       	ldi	r24, 0x62	; 98
     6a0:	92 e0       	ldi	r25, 0x02	; 2
     6a2:	47 df       	rcall	.-370    	; 0x532 <enqueue>
     6a4:	1d c0       	rjmp	.+58     	; 0x6e0 <__vector_29+0x172>
     6a6:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <minVal>
     6aa:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <minVal+0x1>
     6ae:	8d 32       	cpi	r24, 0x2D	; 45
     6b0:	91 40       	sbci	r25, 0x01	; 1
     6b2:	b0 f4       	brcc	.+44     	; 0x6e0 <__vector_29+0x172>
     6b4:	88 e0       	ldi	r24, 0x08	; 8
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	90 93 6f 02 	sts	0x026F, r25	; 0x80026f <mat+0x1>
     6bc:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <mat>
     6c0:	e0 91 6c 02 	lds	r30, 0x026C	; 0x80026c <newLink>
     6c4:	f0 91 6d 02 	lds	r31, 0x026D	; 0x80026d <newLink+0x1>
     6c8:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <mat>
     6cc:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <mat+0x1>
     6d0:	80 83       	st	Z, r24
     6d2:	4c e6       	ldi	r20, 0x6C	; 108
     6d4:	52 e0       	ldi	r21, 0x02	; 2
     6d6:	6a e5       	ldi	r22, 0x5A	; 90
     6d8:	72 e0       	ldi	r23, 0x02	; 2
     6da:	82 e6       	ldi	r24, 0x62	; 98
     6dc:	92 e0       	ldi	r25, 0x02	; 2
     6de:	29 df       	rcall	.-430    	; 0x532 <enqueue>
     6e0:	ff 91       	pop	r31
     6e2:	ef 91       	pop	r30
     6e4:	bf 91       	pop	r27
     6e6:	af 91       	pop	r26
     6e8:	9f 91       	pop	r25
     6ea:	8f 91       	pop	r24
     6ec:	7f 91       	pop	r23
     6ee:	6f 91       	pop	r22
     6f0:	5f 91       	pop	r21
     6f2:	4f 91       	pop	r20
     6f4:	3f 91       	pop	r19
     6f6:	2f 91       	pop	r18
     6f8:	0f 90       	pop	r0
     6fa:	0b be       	out	0x3b, r0	; 59
     6fc:	0f 90       	pop	r0
     6fe:	0f be       	out	0x3f, r0	; 63
     700:	0f 90       	pop	r0
     702:	1f 90       	pop	r1
     704:	18 95       	reti

00000706 <dequeue>:
     706:	fc 01       	movw	r30, r24
     708:	80 81       	ld	r24, Z
     70a:	91 81       	ldd	r25, Z+1	; 0x01
     70c:	da 01       	movw	r26, r20
     70e:	8d 93       	st	X+, r24
     710:	9c 93       	st	X, r25
     712:	a0 81       	ld	r26, Z
     714:	b1 81       	ldd	r27, Z+1	; 0x01
     716:	10 97       	sbiw	r26, 0x00	; 0
     718:	41 f0       	breq	.+16     	; 0x72a <dequeue+0x24>
     71a:	12 96       	adiw	r26, 0x02	; 2
     71c:	8d 91       	ld	r24, X+
     71e:	9c 91       	ld	r25, X
     720:	13 97       	sbiw	r26, 0x03	; 3
     722:	91 83       	std	Z+1, r25	; 0x01
     724:	80 83       	st	Z, r24
     726:	89 2b       	or	r24, r25
     728:	19 f4       	brne	.+6      	; 0x730 <dequeue+0x2a>
     72a:	fb 01       	movw	r30, r22
     72c:	11 82       	std	Z+1, r1	; 0x01
     72e:	10 82       	st	Z, r1
     730:	08 95       	ret

00000732 <main>:
     732:	e1 e6       	ldi	r30, 0x61	; 97
     734:	f0 e0       	ldi	r31, 0x00	; 0
     736:	80 e8       	ldi	r24, 0x80	; 128
     738:	80 83       	st	Z, r24
     73a:	81 e0       	ldi	r24, 0x01	; 1
     73c:	80 83       	st	Z, r24
     73e:	8f ef       	ldi	r24, 0xFF	; 255
     740:	87 b9       	out	0x07, r24	; 7
     742:	84 b9       	out	0x04, r24	; 4
     744:	81 b9       	out	0x01, r24	; 1
     746:	80 e7       	ldi	r24, 0x70	; 112
     748:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
     74c:	f8 94       	cli
     74e:	e9 e6       	ldi	r30, 0x69	; 105
     750:	f0 e0       	ldi	r31, 0x00	; 0
     752:	80 81       	ld	r24, Z
     754:	82 60       	ori	r24, 0x02	; 2
     756:	80 83       	st	Z, r24
     758:	80 81       	ld	r24, Z
     75a:	8c 60       	ori	r24, 0x0C	; 12
     75c:	80 83       	st	Z, r24
     75e:	80 81       	ld	r24, Z
     760:	80 62       	ori	r24, 0x20	; 32
     762:	80 83       	st	Z, r24
     764:	80 81       	ld	r24, Z
     766:	80 6c       	ori	r24, 0xC0	; 192
     768:	80 83       	st	Z, r24
     76a:	8d b3       	in	r24, 0x1d	; 29
     76c:	8f 60       	ori	r24, 0x0F	; 15
     76e:	8d bb       	out	0x1d, r24	; 29
     770:	ea e7       	ldi	r30, 0x7A	; 122
     772:	f0 e0       	ldi	r31, 0x00	; 0
     774:	80 81       	ld	r24, Z
     776:	80 68       	ori	r24, 0x80	; 128
     778:	80 83       	st	Z, r24
     77a:	80 81       	ld	r24, Z
     77c:	88 60       	ori	r24, 0x08	; 8
     77e:	80 83       	st	Z, r24
     780:	ec e7       	ldi	r30, 0x7C	; 124
     782:	f0 e0       	ldi	r31, 0x00	; 0
     784:	80 81       	ld	r24, Z
     786:	80 64       	ori	r24, 0x40	; 64
     788:	80 83       	st	Z, r24
     78a:	78 94       	sei
     78c:	10 92 57 02 	sts	0x0257, r1	; 0x800257 <rtnLink+0x1>
     790:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <rtnLink>
     794:	10 92 6d 02 	sts	0x026D, r1	; 0x80026d <newLink+0x1>
     798:	10 92 6c 02 	sts	0x026C, r1	; 0x80026c <newLink>
     79c:	83 e0       	ldi	r24, 0x03	; 3
     79e:	1e dd       	rcall	.-1476   	; 0x1dc <InitLCD>
     7a0:	09 de       	rcall	.-1006   	; 0x3b4 <PWMgen>
     7a2:	60 e0       	ldi	r22, 0x00	; 0
     7a4:	81 e0       	ldi	r24, 0x01	; 1
     7a6:	ef dc       	rcall	.-1570   	; 0x186 <LCDByte>
     7a8:	87 e0       	ldi	r24, 0x07	; 7
     7aa:	85 b9       	out	0x05, r24	; 5
     7ac:	10 92 63 02 	sts	0x0263, r1	; 0x800263 <head+0x1>
     7b0:	10 92 62 02 	sts	0x0262, r1	; 0x800262 <head>
     7b4:	10 92 5b 02 	sts	0x025B, r1	; 0x80025b <tail+0x1>
     7b8:	10 92 5a 02 	sts	0x025A, r1	; 0x80025a <tail>
     7bc:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x700109>
     7c0:	88 23       	and	r24, r24
     7c2:	d4 f5       	brge	.+116    	; 0x838 <main+0x106>
     7c4:	0f 2e       	mov	r0, r31
     7c6:	f9 e0       	ldi	r31, 0x09	; 9
     7c8:	ef 2e       	mov	r14, r31
     7ca:	ff 24       	eor	r15, r15
     7cc:	f3 94       	inc	r15
     7ce:	f0 2d       	mov	r31, r0
     7d0:	0f 2e       	mov	r0, r31
     7d2:	f6 e3       	ldi	r31, 0x36	; 54
     7d4:	af 2e       	mov	r10, r31
     7d6:	f0 2d       	mov	r31, r0
     7d8:	0f 2e       	mov	r0, r31
     7da:	fe e2       	ldi	r31, 0x2E	; 46
     7dc:	bf 2e       	mov	r11, r31
     7de:	f0 2d       	mov	r31, r0
     7e0:	0f 2e       	mov	r0, r31
     7e2:	fd e2       	ldi	r31, 0x2D	; 45
     7e4:	cf 2e       	mov	r12, r31
     7e6:	f0 2d       	mov	r31, r0
     7e8:	0f 2e       	mov	r0, r31
     7ea:	f5 e3       	ldi	r31, 0x35	; 53
     7ec:	df 2e       	mov	r13, r31
     7ee:	f0 2d       	mov	r31, r0
     7f0:	f7 01       	movw	r30, r14
     7f2:	80 81       	ld	r24, Z
     7f4:	88 23       	and	r24, r24
     7f6:	0c f4       	brge	.+2      	; 0x7fa <main+0xc8>
     7f8:	a2 b8       	out	0x02, r10	; 2
     7fa:	84 e1       	ldi	r24, 0x14	; 20
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	e8 dd       	rcall	.-1072   	; 0x3d0 <mTimer>
     800:	f7 01       	movw	r30, r14
     802:	80 81       	ld	r24, Z
     804:	88 23       	and	r24, r24
     806:	0c f4       	brge	.+2      	; 0x80a <main+0xd8>
     808:	b2 b8       	out	0x02, r11	; 2
     80a:	84 e1       	ldi	r24, 0x14	; 20
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	e0 dd       	rcall	.-1088   	; 0x3d0 <mTimer>
     810:	f7 01       	movw	r30, r14
     812:	80 81       	ld	r24, Z
     814:	88 23       	and	r24, r24
     816:	0c f4       	brge	.+2      	; 0x81a <main+0xe8>
     818:	c2 b8       	out	0x02, r12	; 2
     81a:	84 e1       	ldi	r24, 0x14	; 20
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	d8 dd       	rcall	.-1104   	; 0x3d0 <mTimer>
     820:	f7 01       	movw	r30, r14
     822:	80 81       	ld	r24, Z
     824:	88 23       	and	r24, r24
     826:	0c f4       	brge	.+2      	; 0x82a <main+0xf8>
     828:	d2 b8       	out	0x02, r13	; 2
     82a:	84 e1       	ldi	r24, 0x14	; 20
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	d0 dd       	rcall	.-1120   	; 0x3d0 <mTimer>
     830:	f7 01       	movw	r30, r14
     832:	80 81       	ld	r24, Z
     834:	88 23       	and	r24, r24
     836:	e4 f2       	brlt	.-72     	; 0x7f0 <main+0xbe>
     838:	cc 24       	eor	r12, r12
     83a:	c3 94       	inc	r12
     83c:	d1 2c       	mov	r13, r1
     83e:	0f 2e       	mov	r0, r31
     840:	f4 e1       	ldi	r31, 0x14	; 20
     842:	6f 2e       	mov	r6, r31
     844:	f0 e5       	ldi	r31, 0x50	; 80
     846:	7f 2e       	mov	r7, r31
     848:	f0 2d       	mov	r31, r0
     84a:	0f 2e       	mov	r0, r31
     84c:	fb e0       	ldi	r31, 0x0B	; 11
     84e:	ef 2e       	mov	r14, r31
     850:	ff 24       	eor	r15, r15
     852:	f3 94       	inc	r15
     854:	f0 2d       	mov	r31, r0
     856:	0f 2e       	mov	r0, r31
     858:	f6 e3       	ldi	r31, 0x36	; 54
     85a:	4f 2e       	mov	r4, r31
     85c:	f0 2d       	mov	r31, r0
     85e:	0f 2e       	mov	r0, r31
     860:	fe e2       	ldi	r31, 0x2E	; 46
     862:	5f 2e       	mov	r5, r31
     864:	f0 2d       	mov	r31, r0
     866:	0f 2e       	mov	r0, r31
     868:	f8 e3       	ldi	r31, 0x38	; 56
     86a:	af 2e       	mov	r10, r31
     86c:	f8 e1       	ldi	r31, 0x18	; 24
     86e:	bf 2e       	mov	r11, r31
     870:	f0 2d       	mov	r31, r0
     872:	68 94       	set
     874:	88 24       	eor	r8, r8
     876:	82 f8       	bld	r8, 2
     878:	91 2c       	mov	r9, r1
     87a:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <stepsLeft>
     87e:	90 91 7d 02 	lds	r25, 0x027D	; 0x80027d <stepsLeft+0x1>
     882:	01 97       	sbiw	r24, 0x01	; 1
     884:	79 f4       	brne	.+30     	; 0x8a4 <main+0x172>
     886:	82 e3       	ldi	r24, 0x32	; 50
     888:	90 e0       	ldi	r25, 0x00	; 0
     88a:	a2 dd       	rcall	.-1212   	; 0x3d0 <mTimer>
     88c:	d0 92 4f 02 	sts	0x024F, r13	; 0x80024f <INT2_result_flag+0x1>
     890:	c0 92 4e 02 	sts	0x024E, r12	; 0x80024e <INT2_result_flag>
     894:	d0 92 6b 02 	sts	0x026B, r13	; 0x80026b <stepperStageFlag+0x1>
     898:	c0 92 6a 02 	sts	0x026A, r12	; 0x80026a <stepperStageFlag>
     89c:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <stepsLeft+0x1>
     8a0:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <stepsLeft>
     8a4:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <stepperStageFlag>
     8a8:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <stepperStageFlag+0x1>
     8ac:	01 97       	sbiw	r24, 0x01	; 1
     8ae:	09 f0       	breq	.+2      	; 0x8b2 <main+0x180>
     8b0:	67 c3       	rjmp	.+1742   	; 0xf80 <main+0x84e>
     8b2:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <stepsLeft>
     8b6:	90 91 7d 02 	lds	r25, 0x027D	; 0x80027d <stepsLeft+0x1>
     8ba:	89 2b       	or	r24, r25
     8bc:	09 f0       	breq	.+2      	; 0x8c0 <main+0x18e>
     8be:	60 c3       	rjmp	.+1728   	; 0xf80 <main+0x84e>
     8c0:	46 e5       	ldi	r20, 0x56	; 86
     8c2:	52 e0       	ldi	r21, 0x02	; 2
     8c4:	6a e5       	ldi	r22, 0x5A	; 90
     8c6:	72 e0       	ldi	r23, 0x02	; 2
     8c8:	82 e6       	ldi	r24, 0x62	; 98
     8ca:	92 e0       	ldi	r25, 0x02	; 2
     8cc:	1c df       	rcall	.-456    	; 0x706 <dequeue>
     8ce:	e0 91 56 02 	lds	r30, 0x0256	; 0x800256 <rtnLink>
     8d2:	f0 91 57 02 	lds	r31, 0x0257	; 0x800257 <rtnLink+0x1>
     8d6:	80 81       	ld	r24, Z
     8d8:	85 30       	cpi	r24, 0x05	; 5
     8da:	71 f4       	brne	.+28     	; 0x8f8 <main+0x1c6>
     8dc:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <desiredPosition+0x1>
     8e0:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <desiredPosition>
     8e4:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <blCounter>
     8e8:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <blCounter+0x1>
     8ec:	01 96       	adiw	r24, 0x01	; 1
     8ee:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <blCounter+0x1>
     8f2:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <blCounter>
     8f6:	35 c0       	rjmp	.+106    	; 0x962 <main+0x230>
     8f8:	86 30       	cpi	r24, 0x06	; 6
     8fa:	81 f4       	brne	.+32     	; 0x91c <main+0x1ea>
     8fc:	84 e6       	ldi	r24, 0x64	; 100
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	90 93 79 02 	sts	0x0279, r25	; 0x800279 <desiredPosition+0x1>
     904:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <desiredPosition>
     908:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <whCounter>
     90c:	90 91 61 02 	lds	r25, 0x0261	; 0x800261 <whCounter+0x1>
     910:	01 96       	adiw	r24, 0x01	; 1
     912:	90 93 61 02 	sts	0x0261, r25	; 0x800261 <whCounter+0x1>
     916:	80 93 60 02 	sts	0x0260, r24	; 0x800260 <whCounter>
     91a:	23 c0       	rjmp	.+70     	; 0x962 <main+0x230>
     91c:	87 30       	cpi	r24, 0x07	; 7
     91e:	81 f4       	brne	.+32     	; 0x940 <main+0x20e>
     920:	82 e3       	ldi	r24, 0x32	; 50
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	90 93 79 02 	sts	0x0279, r25	; 0x800279 <desiredPosition+0x1>
     928:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <desiredPosition>
     92c:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <stCounter>
     930:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <stCounter+0x1>
     934:	01 96       	adiw	r24, 0x01	; 1
     936:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <stCounter+0x1>
     93a:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <stCounter>
     93e:	11 c0       	rjmp	.+34     	; 0x962 <main+0x230>
     940:	88 30       	cpi	r24, 0x08	; 8
     942:	79 f4       	brne	.+30     	; 0x962 <main+0x230>
     944:	86 e9       	ldi	r24, 0x96	; 150
     946:	90 e0       	ldi	r25, 0x00	; 0
     948:	90 93 79 02 	sts	0x0279, r25	; 0x800279 <desiredPosition+0x1>
     94c:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <desiredPosition>
     950:	80 91 70 02 	lds	r24, 0x0270	; 0x800270 <alCounter>
     954:	90 91 71 02 	lds	r25, 0x0271	; 0x800271 <alCounter+0x1>
     958:	01 96       	adiw	r24, 0x01	; 1
     95a:	90 93 71 02 	sts	0x0271, r25	; 0x800271 <alCounter+0x1>
     95e:	80 93 70 02 	sts	0x0270, r24	; 0x800270 <alCounter>
     962:	20 91 78 02 	lds	r18, 0x0278	; 0x800278 <desiredPosition>
     966:	30 91 79 02 	lds	r19, 0x0279	; 0x800279 <desiredPosition+0x1>
     96a:	80 91 5e 02 	lds	r24, 0x025E	; 0x80025e <currentPosition>
     96e:	90 91 5f 02 	lds	r25, 0x025F	; 0x80025f <currentPosition+0x1>
     972:	28 17       	cp	r18, r24
     974:	39 07       	cpc	r19, r25
     976:	29 f4       	brne	.+10     	; 0x982 <main+0x250>
     978:	10 92 65 02 	sts	0x0265, r1	; 0x800265 <minSteps+0x1>
     97c:	10 92 64 02 	sts	0x0264, r1	; 0x800264 <minSteps>
     980:	a6 c0       	rjmp	.+332    	; 0xace <main+0x39c>
     982:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <desiredPosition>
     986:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <desiredPosition+0x1>
     98a:	20 91 5e 02 	lds	r18, 0x025E	; 0x80025e <currentPosition>
     98e:	30 91 5f 02 	lds	r19, 0x025F	; 0x80025f <currentPosition+0x1>
     992:	82 1b       	sub	r24, r18
     994:	93 0b       	sbc	r25, r19
     996:	9c 01       	movw	r18, r24
     998:	22 f4       	brpl	.+8      	; 0x9a2 <main+0x270>
     99a:	22 27       	eor	r18, r18
     99c:	33 27       	eor	r19, r19
     99e:	28 1b       	sub	r18, r24
     9a0:	39 0b       	sbc	r19, r25
     9a2:	25 36       	cpi	r18, 0x65	; 101
     9a4:	31 05       	cpc	r19, r1
     9a6:	b4 f0       	brlt	.+44     	; 0x9d4 <main+0x2a2>
     9a8:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <desiredPosition>
     9ac:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <desiredPosition+0x1>
     9b0:	20 91 5e 02 	lds	r18, 0x025E	; 0x80025e <currentPosition>
     9b4:	30 91 5f 02 	lds	r19, 0x025F	; 0x80025f <currentPosition+0x1>
     9b8:	82 1b       	sub	r24, r18
     9ba:	93 0b       	sbc	r25, r19
     9bc:	5a f4       	brpl	.+22     	; 0x9d4 <main+0x2a2>
     9be:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <directionCW+0x1>
     9c2:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <directionCW>
     9c6:	82 e3       	ldi	r24, 0x32	; 50
     9c8:	90 e0       	ldi	r25, 0x00	; 0
     9ca:	90 93 65 02 	sts	0x0265, r25	; 0x800265 <minSteps+0x1>
     9ce:	80 93 64 02 	sts	0x0264, r24	; 0x800264 <minSteps>
     9d2:	7d c0       	rjmp	.+250    	; 0xace <main+0x39c>
     9d4:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <desiredPosition>
     9d8:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <desiredPosition+0x1>
     9dc:	20 91 5e 02 	lds	r18, 0x025E	; 0x80025e <currentPosition>
     9e0:	30 91 5f 02 	lds	r19, 0x025F	; 0x80025f <currentPosition+0x1>
     9e4:	82 1b       	sub	r24, r18
     9e6:	93 0b       	sbc	r25, r19
     9e8:	84 36       	cpi	r24, 0x64	; 100
     9ea:	91 05       	cpc	r25, r1
     9ec:	4c f5       	brge	.+82     	; 0xa40 <main+0x30e>
     9ee:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <desiredPosition>
     9f2:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <desiredPosition+0x1>
     9f6:	20 91 5e 02 	lds	r18, 0x025E	; 0x80025e <currentPosition>
     9fa:	30 91 5f 02 	lds	r19, 0x025F	; 0x80025f <currentPosition+0x1>
     9fe:	82 1b       	sub	r24, r18
     a00:	93 0b       	sbc	r25, r19
     a02:	2a f4       	brpl	.+10     	; 0xa0e <main+0x2dc>
     a04:	d0 92 1f 02 	sts	0x021F, r13	; 0x80021f <directionCW+0x1>
     a08:	c0 92 1e 02 	sts	0x021E, r12	; 0x80021e <directionCW>
     a0c:	04 c0       	rjmp	.+8      	; 0xa16 <main+0x2e4>
     a0e:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <directionCW+0x1>
     a12:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <directionCW>
     a16:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <desiredPosition>
     a1a:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <desiredPosition+0x1>
     a1e:	20 91 5e 02 	lds	r18, 0x025E	; 0x80025e <currentPosition>
     a22:	30 91 5f 02 	lds	r19, 0x025F	; 0x80025f <currentPosition+0x1>
     a26:	82 1b       	sub	r24, r18
     a28:	93 0b       	sbc	r25, r19
     a2a:	9c 01       	movw	r18, r24
     a2c:	22 f4       	brpl	.+8      	; 0xa36 <main+0x304>
     a2e:	22 27       	eor	r18, r18
     a30:	33 27       	eor	r19, r19
     a32:	28 1b       	sub	r18, r24
     a34:	39 0b       	sbc	r19, r25
     a36:	30 93 65 02 	sts	0x0265, r19	; 0x800265 <minSteps+0x1>
     a3a:	20 93 64 02 	sts	0x0264, r18	; 0x800264 <minSteps>
     a3e:	47 c0       	rjmp	.+142    	; 0xace <main+0x39c>
     a40:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <desiredPosition>
     a44:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <desiredPosition+0x1>
     a48:	20 91 5e 02 	lds	r18, 0x025E	; 0x80025e <currentPosition>
     a4c:	30 91 5f 02 	lds	r19, 0x025F	; 0x80025f <currentPosition+0x1>
     a50:	82 1b       	sub	r24, r18
     a52:	93 0b       	sbc	r25, r19
     a54:	84 36       	cpi	r24, 0x64	; 100
     a56:	91 05       	cpc	r25, r1
     a58:	c9 f4       	brne	.+50     	; 0xa8c <main+0x35a>
     a5a:	d0 92 1f 02 	sts	0x021F, r13	; 0x80021f <directionCW+0x1>
     a5e:	c0 92 1e 02 	sts	0x021E, r12	; 0x80021e <directionCW>
     a62:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <desiredPosition>
     a66:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <desiredPosition+0x1>
     a6a:	20 91 5e 02 	lds	r18, 0x025E	; 0x80025e <currentPosition>
     a6e:	30 91 5f 02 	lds	r19, 0x025F	; 0x80025f <currentPosition+0x1>
     a72:	82 1b       	sub	r24, r18
     a74:	93 0b       	sbc	r25, r19
     a76:	9c 01       	movw	r18, r24
     a78:	22 f4       	brpl	.+8      	; 0xa82 <main+0x350>
     a7a:	22 27       	eor	r18, r18
     a7c:	33 27       	eor	r19, r19
     a7e:	28 1b       	sub	r18, r24
     a80:	39 0b       	sbc	r19, r25
     a82:	30 93 65 02 	sts	0x0265, r19	; 0x800265 <minSteps+0x1>
     a86:	20 93 64 02 	sts	0x0264, r18	; 0x800264 <minSteps>
     a8a:	21 c0       	rjmp	.+66     	; 0xace <main+0x39c>
     a8c:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <desiredPosition>
     a90:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <desiredPosition+0x1>
     a94:	20 91 5e 02 	lds	r18, 0x025E	; 0x80025e <currentPosition>
     a98:	30 91 5f 02 	lds	r19, 0x025F	; 0x80025f <currentPosition+0x1>
     a9c:	82 1b       	sub	r24, r18
     a9e:	93 0b       	sbc	r25, r19
     aa0:	85 36       	cpi	r24, 0x65	; 101
     aa2:	91 05       	cpc	r25, r1
     aa4:	a4 f0       	brlt	.+40     	; 0xace <main+0x39c>
     aa6:	d0 92 1f 02 	sts	0x021F, r13	; 0x80021f <directionCW+0x1>
     aaa:	c0 92 1e 02 	sts	0x021E, r12	; 0x80021e <directionCW>
     aae:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <desiredPosition>
     ab2:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <desiredPosition+0x1>
     ab6:	84 56       	subi	r24, 0x64	; 100
     ab8:	91 09       	sbc	r25, r1
     aba:	9c 01       	movw	r18, r24
     abc:	22 f4       	brpl	.+8      	; 0xac6 <main+0x394>
     abe:	22 27       	eor	r18, r18
     ac0:	33 27       	eor	r19, r19
     ac2:	28 1b       	sub	r18, r24
     ac4:	39 0b       	sbc	r19, r25
     ac6:	30 93 65 02 	sts	0x0265, r19	; 0x800265 <minSteps+0x1>
     aca:	20 93 64 02 	sts	0x0264, r18	; 0x800264 <minSteps>
     ace:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <minSteps>
     ad2:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <minSteps+0x1>
     ad6:	89 2b       	or	r24, r25
     ad8:	11 f4       	brne	.+4      	; 0xade <main+0x3ac>
     ada:	87 e0       	ldi	r24, 0x07	; 7
     adc:	85 b9       	out	0x05, r24	; 5
     ade:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <directionCW>
     ae2:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <directionCW+0x1>
     ae6:	01 97       	sbiw	r24, 0x01	; 1
     ae8:	09 f0       	breq	.+2      	; 0xaec <main+0x3ba>
     aea:	16 c1       	rjmp	.+556    	; 0xd18 <main+0x5e6>
     aec:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <minSteps>
     af0:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <minSteps+0x1>
     af4:	c8 17       	cp	r28, r24
     af6:	d9 07       	cpc	r29, r25
     af8:	0c f0       	brlt	.+2      	; 0xafc <main+0x3ca>
     afa:	f7 c0       	rjmp	.+494    	; 0xcea <main+0x5b8>
     afc:	0f 2e       	mov	r0, r31
     afe:	f7 e0       	ldi	r31, 0x07	; 7
     b00:	2f 2e       	mov	r2, r31
     b02:	f0 2d       	mov	r31, r0
     b04:	68 94       	set
     b06:	33 24       	eor	r3, r3
     b08:	34 f8       	bld	r3, 4
     b0a:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <stepperStagePosition>
     b0e:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <stepperStagePosition+0x1>
     b12:	01 96       	adiw	r24, 0x01	; 1
     b14:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <stepperStagePosition+0x1>
     b18:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <stepperStagePosition>
     b1c:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <minSteps>
     b20:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <minSteps+0x1>
     b24:	c2 97       	sbiw	r24, 0x32	; 50
     b26:	09 f0       	breq	.+2      	; 0xb2a <main+0x3f8>
     b28:	3f c0       	rjmp	.+126    	; 0xba8 <main+0x476>
     b2a:	ca 30       	cpi	r28, 0x0A	; 10
     b2c:	d1 05       	cpc	r29, r1
     b2e:	b4 f4       	brge	.+44     	; 0xb5c <main+0x42a>
     b30:	f8 01       	movw	r30, r16
     b32:	ee 0f       	add	r30, r30
     b34:	ff 1f       	adc	r31, r31
     b36:	e8 5f       	subi	r30, 0xF8	; 248
     b38:	fd 4f       	sbci	r31, 0xFD	; 253
     b3a:	80 81       	ld	r24, Z
     b3c:	91 81       	ldd	r25, Z+1	; 0x01
     b3e:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <velt+0x1>
     b42:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <velt>
     b46:	0f 5f       	subi	r16, 0xFF	; 255
     b48:	1f 4f       	sbci	r17, 0xFF	; 255
     b4a:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <velt>
     b4e:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <velt+0x1>
     b52:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <timeVel+0x1>
     b56:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <timeVel>
     b5a:	64 c0       	rjmp	.+200    	; 0xc24 <main+0x4f2>
     b5c:	c9 32       	cpi	r28, 0x29	; 41
     b5e:	d1 05       	cpc	r29, r1
     b60:	b4 f0       	brlt	.+44     	; 0xb8e <main+0x45c>
     b62:	f8 01       	movw	r30, r16
     b64:	ee 0f       	add	r30, r30
     b66:	ff 1f       	adc	r31, r31
     b68:	e8 5f       	subi	r30, 0xF8	; 248
     b6a:	fd 4f       	sbci	r31, 0xFD	; 253
     b6c:	80 81       	ld	r24, Z
     b6e:	91 81       	ldd	r25, Z+1	; 0x01
     b70:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <velt+0x1>
     b74:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <velt>
     b78:	01 50       	subi	r16, 0x01	; 1
     b7a:	11 09       	sbc	r17, r1
     b7c:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <velt>
     b80:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <velt+0x1>
     b84:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <timeVel+0x1>
     b88:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <timeVel>
     b8c:	4b c0       	rjmp	.+150    	; 0xc24 <main+0x4f2>
     b8e:	b0 92 1d 02 	sts	0x021D, r11	; 0x80021d <velt+0x1>
     b92:	a0 92 1c 02 	sts	0x021C, r10	; 0x80021c <velt>
     b96:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <velt>
     b9a:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <velt+0x1>
     b9e:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <timeVel+0x1>
     ba2:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <timeVel>
     ba6:	3e c0       	rjmp	.+124    	; 0xc24 <main+0x4f2>
     ba8:	ca 30       	cpi	r28, 0x0A	; 10
     baa:	d1 05       	cpc	r29, r1
     bac:	b4 f4       	brge	.+44     	; 0xbda <main+0x4a8>
     bae:	f8 01       	movw	r30, r16
     bb0:	ee 0f       	add	r30, r30
     bb2:	ff 1f       	adc	r31, r31
     bb4:	e8 5f       	subi	r30, 0xF8	; 248
     bb6:	fd 4f       	sbci	r31, 0xFD	; 253
     bb8:	80 81       	ld	r24, Z
     bba:	91 81       	ldd	r25, Z+1	; 0x01
     bbc:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <velt+0x1>
     bc0:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <velt>
     bc4:	0f 5f       	subi	r16, 0xFF	; 255
     bc6:	1f 4f       	sbci	r17, 0xFF	; 255
     bc8:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <velt>
     bcc:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <velt+0x1>
     bd0:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <timeVel+0x1>
     bd4:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <timeVel>
     bd8:	25 c0       	rjmp	.+74     	; 0xc24 <main+0x4f2>
     bda:	cb 35       	cpi	r28, 0x5B	; 91
     bdc:	d1 05       	cpc	r29, r1
     bde:	b4 f0       	brlt	.+44     	; 0xc0c <main+0x4da>
     be0:	f8 01       	movw	r30, r16
     be2:	ee 0f       	add	r30, r30
     be4:	ff 1f       	adc	r31, r31
     be6:	e8 5f       	subi	r30, 0xF8	; 248
     be8:	fd 4f       	sbci	r31, 0xFD	; 253
     bea:	80 81       	ld	r24, Z
     bec:	91 81       	ldd	r25, Z+1	; 0x01
     bee:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <velt+0x1>
     bf2:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <velt>
     bf6:	01 50       	subi	r16, 0x01	; 1
     bf8:	11 09       	sbc	r17, r1
     bfa:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <velt>
     bfe:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <velt+0x1>
     c02:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <timeVel+0x1>
     c06:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <timeVel>
     c0a:	0c c0       	rjmp	.+24     	; 0xc24 <main+0x4f2>
     c0c:	b0 92 1d 02 	sts	0x021D, r11	; 0x80021d <velt+0x1>
     c10:	a0 92 1c 02 	sts	0x021C, r10	; 0x80021c <velt>
     c14:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <velt>
     c18:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <velt+0x1>
     c1c:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <timeVel+0x1>
     c20:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <timeVel>
     c24:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <minSteps>
     c28:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <minSteps+0x1>
     c2c:	8c 1b       	sub	r24, r28
     c2e:	9d 0b       	sbc	r25, r29
     c30:	0a 97       	sbiw	r24, 0x0a	; 10
     c32:	09 f4       	brne	.+2      	; 0xc36 <main+0x504>
     c34:	25 b8       	out	0x05, r2	; 5
     c36:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <stepperStagePosition>
     c3a:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <stepperStagePosition+0x1>
     c3e:	05 97       	sbiw	r24, 0x05	; 5
     c40:	21 f4       	brne	.+8      	; 0xc4a <main+0x518>
     c42:	d0 92 77 02 	sts	0x0277, r13	; 0x800277 <stepperStagePosition+0x1>
     c46:	c0 92 76 02 	sts	0x0276, r12	; 0x800276 <stepperStagePosition>
     c4a:	20 97       	sbiw	r28, 0x00	; 0
     c4c:	61 f0       	breq	.+24     	; 0xc66 <main+0x534>
     c4e:	f7 01       	movw	r30, r14
     c50:	30 82       	st	Z, r3
     c52:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <__data_end>
     c56:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <__data_end+0x1>
     c5a:	89 2b       	or	r24, r25
     c5c:	d1 f3       	breq	.-12     	; 0xc52 <main+0x520>
     c5e:	10 92 4d 02 	sts	0x024D, r1	; 0x80024d <__data_end+0x1>
     c62:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <__data_end>
     c66:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <stepperStagePosition>
     c6a:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <stepperStagePosition+0x1>
     c6e:	01 97       	sbiw	r24, 0x01	; 1
     c70:	39 f4       	brne	.+14     	; 0xc80 <main+0x54e>
     c72:	42 b8       	out	0x02, r4	; 2
     c74:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <timeVel>
     c78:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <timeVel+0x1>
     c7c:	00 dc       	rcall	.-2048   	; 0x47e <crankTimer>
     c7e:	28 c0       	rjmp	.+80     	; 0xcd0 <main+0x59e>
     c80:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <stepperStagePosition>
     c84:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <stepperStagePosition+0x1>
     c88:	02 97       	sbiw	r24, 0x02	; 2
     c8a:	39 f4       	brne	.+14     	; 0xc9a <main+0x568>
     c8c:	52 b8       	out	0x02, r5	; 2
     c8e:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <timeVel>
     c92:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <timeVel+0x1>
     c96:	f3 db       	rcall	.-2074   	; 0x47e <crankTimer>
     c98:	1b c0       	rjmp	.+54     	; 0xcd0 <main+0x59e>
     c9a:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <stepperStagePosition>
     c9e:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <stepperStagePosition+0x1>
     ca2:	03 97       	sbiw	r24, 0x03	; 3
     ca4:	41 f4       	brne	.+16     	; 0xcb6 <main+0x584>
     ca6:	fd e2       	ldi	r31, 0x2D	; 45
     ca8:	f2 b9       	out	0x02, r31	; 2
     caa:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <timeVel>
     cae:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <timeVel+0x1>
     cb2:	e5 db       	rcall	.-2102   	; 0x47e <crankTimer>
     cb4:	0d c0       	rjmp	.+26     	; 0xcd0 <main+0x59e>
     cb6:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <stepperStagePosition>
     cba:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <stepperStagePosition+0x1>
     cbe:	04 97       	sbiw	r24, 0x04	; 4
     cc0:	39 f4       	brne	.+14     	; 0xcd0 <main+0x59e>
     cc2:	85 e3       	ldi	r24, 0x35	; 53
     cc4:	82 b9       	out	0x02, r24	; 2
     cc6:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <timeVel>
     cca:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <timeVel+0x1>
     cce:	d7 db       	rcall	.-2130   	; 0x47e <crankTimer>
     cd0:	21 96       	adiw	r28, 0x01	; 1
     cd2:	10 92 4d 02 	sts	0x024D, r1	; 0x80024d <__data_end+0x1>
     cd6:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <__data_end>
     cda:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <minSteps>
     cde:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <minSteps+0x1>
     ce2:	c8 17       	cp	r28, r24
     ce4:	d9 07       	cpc	r29, r25
     ce6:	0c f4       	brge	.+2      	; 0xcea <main+0x5b8>
     ce8:	10 cf       	rjmp	.-480    	; 0xb0a <main+0x3d8>
     cea:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <desiredPosition>
     cee:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <desiredPosition+0x1>
     cf2:	90 93 5f 02 	sts	0x025F, r25	; 0x80025f <currentPosition+0x1>
     cf6:	80 93 5e 02 	sts	0x025E, r24	; 0x80025e <currentPosition>
     cfa:	10 92 6b 02 	sts	0x026B, r1	; 0x80026b <stepperStageFlag+0x1>
     cfe:	10 92 6a 02 	sts	0x026A, r1	; 0x80026a <stepperStageFlag>
     d02:	10 92 4f 02 	sts	0x024F, r1	; 0x80024f <INT2_result_flag+0x1>
     d06:	10 92 4e 02 	sts	0x024E, r1	; 0x80024e <INT2_result_flag>
     d0a:	4b 9b       	sbis	0x09, 3	; 9
     d0c:	05 c0       	rjmp	.+10     	; 0xd18 <main+0x5e6>
     d0e:	ea e7       	ldi	r30, 0x7A	; 122
     d10:	f0 e0       	ldi	r31, 0x00	; 0
     d12:	80 81       	ld	r24, Z
     d14:	80 64       	ori	r24, 0x40	; 64
     d16:	80 83       	st	Z, r24
     d18:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <directionCW>
     d1c:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <directionCW+0x1>
     d20:	89 2b       	or	r24, r25
     d22:	09 f0       	breq	.+2      	; 0xd26 <main+0x5f4>
     d24:	16 c1       	rjmp	.+556    	; 0xf52 <main+0x820>
     d26:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <minSteps>
     d2a:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <minSteps+0x1>
     d2e:	c8 17       	cp	r28, r24
     d30:	d9 07       	cpc	r29, r25
     d32:	0c f0       	brlt	.+2      	; 0xd36 <main+0x604>
     d34:	f7 c0       	rjmp	.+494    	; 0xf24 <main+0x7f2>
     d36:	0f 2e       	mov	r0, r31
     d38:	f7 e0       	ldi	r31, 0x07	; 7
     d3a:	2f 2e       	mov	r2, r31
     d3c:	f0 2d       	mov	r31, r0
     d3e:	68 94       	set
     d40:	33 24       	eor	r3, r3
     d42:	34 f8       	bld	r3, 4
     d44:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <minSteps>
     d48:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <minSteps+0x1>
     d4c:	c2 97       	sbiw	r24, 0x32	; 50
     d4e:	09 f0       	breq	.+2      	; 0xd52 <main+0x620>
     d50:	3f c0       	rjmp	.+126    	; 0xdd0 <main+0x69e>
     d52:	ca 30       	cpi	r28, 0x0A	; 10
     d54:	d1 05       	cpc	r29, r1
     d56:	b4 f4       	brge	.+44     	; 0xd84 <main+0x652>
     d58:	f8 01       	movw	r30, r16
     d5a:	ee 0f       	add	r30, r30
     d5c:	ff 1f       	adc	r31, r31
     d5e:	e8 5f       	subi	r30, 0xF8	; 248
     d60:	fd 4f       	sbci	r31, 0xFD	; 253
     d62:	80 81       	ld	r24, Z
     d64:	91 81       	ldd	r25, Z+1	; 0x01
     d66:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <velt+0x1>
     d6a:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <velt>
     d6e:	0f 5f       	subi	r16, 0xFF	; 255
     d70:	1f 4f       	sbci	r17, 0xFF	; 255
     d72:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <velt>
     d76:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <velt+0x1>
     d7a:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <timeVel+0x1>
     d7e:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <timeVel>
     d82:	64 c0       	rjmp	.+200    	; 0xe4c <main+0x71a>
     d84:	c9 32       	cpi	r28, 0x29	; 41
     d86:	d1 05       	cpc	r29, r1
     d88:	b4 f0       	brlt	.+44     	; 0xdb6 <main+0x684>
     d8a:	f8 01       	movw	r30, r16
     d8c:	ee 0f       	add	r30, r30
     d8e:	ff 1f       	adc	r31, r31
     d90:	e8 5f       	subi	r30, 0xF8	; 248
     d92:	fd 4f       	sbci	r31, 0xFD	; 253
     d94:	80 81       	ld	r24, Z
     d96:	91 81       	ldd	r25, Z+1	; 0x01
     d98:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <velt+0x1>
     d9c:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <velt>
     da0:	01 50       	subi	r16, 0x01	; 1
     da2:	11 09       	sbc	r17, r1
     da4:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <velt>
     da8:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <velt+0x1>
     dac:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <timeVel+0x1>
     db0:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <timeVel>
     db4:	4b c0       	rjmp	.+150    	; 0xe4c <main+0x71a>
     db6:	b0 92 1d 02 	sts	0x021D, r11	; 0x80021d <velt+0x1>
     dba:	a0 92 1c 02 	sts	0x021C, r10	; 0x80021c <velt>
     dbe:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <velt>
     dc2:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <velt+0x1>
     dc6:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <timeVel+0x1>
     dca:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <timeVel>
     dce:	3e c0       	rjmp	.+124    	; 0xe4c <main+0x71a>
     dd0:	ca 30       	cpi	r28, 0x0A	; 10
     dd2:	d1 05       	cpc	r29, r1
     dd4:	b4 f4       	brge	.+44     	; 0xe02 <main+0x6d0>
     dd6:	f8 01       	movw	r30, r16
     dd8:	ee 0f       	add	r30, r30
     dda:	ff 1f       	adc	r31, r31
     ddc:	e8 5f       	subi	r30, 0xF8	; 248
     dde:	fd 4f       	sbci	r31, 0xFD	; 253
     de0:	80 81       	ld	r24, Z
     de2:	91 81       	ldd	r25, Z+1	; 0x01
     de4:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <velt+0x1>
     de8:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <velt>
     dec:	0f 5f       	subi	r16, 0xFF	; 255
     dee:	1f 4f       	sbci	r17, 0xFF	; 255
     df0:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <velt>
     df4:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <velt+0x1>
     df8:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <timeVel+0x1>
     dfc:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <timeVel>
     e00:	25 c0       	rjmp	.+74     	; 0xe4c <main+0x71a>
     e02:	cb 35       	cpi	r28, 0x5B	; 91
     e04:	d1 05       	cpc	r29, r1
     e06:	b4 f0       	brlt	.+44     	; 0xe34 <main+0x702>
     e08:	f8 01       	movw	r30, r16
     e0a:	ee 0f       	add	r30, r30
     e0c:	ff 1f       	adc	r31, r31
     e0e:	e8 5f       	subi	r30, 0xF8	; 248
     e10:	fd 4f       	sbci	r31, 0xFD	; 253
     e12:	80 81       	ld	r24, Z
     e14:	91 81       	ldd	r25, Z+1	; 0x01
     e16:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <velt+0x1>
     e1a:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <velt>
     e1e:	01 50       	subi	r16, 0x01	; 1
     e20:	11 09       	sbc	r17, r1
     e22:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <velt>
     e26:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <velt+0x1>
     e2a:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <timeVel+0x1>
     e2e:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <timeVel>
     e32:	0c c0       	rjmp	.+24     	; 0xe4c <main+0x71a>
     e34:	b0 92 1d 02 	sts	0x021D, r11	; 0x80021d <velt+0x1>
     e38:	a0 92 1c 02 	sts	0x021C, r10	; 0x80021c <velt>
     e3c:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <velt>
     e40:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <velt+0x1>
     e44:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <timeVel+0x1>
     e48:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <timeVel>
     e4c:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <minSteps>
     e50:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <minSteps+0x1>
     e54:	8c 1b       	sub	r24, r28
     e56:	9d 0b       	sbc	r25, r29
     e58:	0a 97       	sbiw	r24, 0x0a	; 10
     e5a:	09 f4       	brne	.+2      	; 0xe5e <main+0x72c>
     e5c:	25 b8       	out	0x05, r2	; 5
     e5e:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <stepperStagePosition>
     e62:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <stepperStagePosition+0x1>
     e66:	89 2b       	or	r24, r25
     e68:	21 f4       	brne	.+8      	; 0xe72 <main+0x740>
     e6a:	90 92 77 02 	sts	0x0277, r9	; 0x800277 <stepperStagePosition+0x1>
     e6e:	80 92 76 02 	sts	0x0276, r8	; 0x800276 <stepperStagePosition>
     e72:	20 97       	sbiw	r28, 0x00	; 0
     e74:	61 f0       	breq	.+24     	; 0xe8e <main+0x75c>
     e76:	f7 01       	movw	r30, r14
     e78:	30 82       	st	Z, r3
     e7a:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <__data_end>
     e7e:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <__data_end+0x1>
     e82:	89 2b       	or	r24, r25
     e84:	d1 f3       	breq	.-12     	; 0xe7a <main+0x748>
     e86:	10 92 4d 02 	sts	0x024D, r1	; 0x80024d <__data_end+0x1>
     e8a:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <__data_end>
     e8e:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <stepperStagePosition>
     e92:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <stepperStagePosition+0x1>
     e96:	04 97       	sbiw	r24, 0x04	; 4
     e98:	41 f4       	brne	.+16     	; 0xeaa <main+0x778>
     e9a:	f5 e3       	ldi	r31, 0x35	; 53
     e9c:	f2 b9       	out	0x02, r31	; 2
     e9e:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <timeVel>
     ea2:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <timeVel+0x1>
     ea6:	eb da       	rcall	.-2602   	; 0x47e <crankTimer>
     ea8:	27 c0       	rjmp	.+78     	; 0xef8 <main+0x7c6>
     eaa:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <stepperStagePosition>
     eae:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <stepperStagePosition+0x1>
     eb2:	03 97       	sbiw	r24, 0x03	; 3
     eb4:	41 f4       	brne	.+16     	; 0xec6 <main+0x794>
     eb6:	8d e2       	ldi	r24, 0x2D	; 45
     eb8:	82 b9       	out	0x02, r24	; 2
     eba:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <timeVel>
     ebe:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <timeVel+0x1>
     ec2:	dd da       	rcall	.-2630   	; 0x47e <crankTimer>
     ec4:	19 c0       	rjmp	.+50     	; 0xef8 <main+0x7c6>
     ec6:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <stepperStagePosition>
     eca:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <stepperStagePosition+0x1>
     ece:	02 97       	sbiw	r24, 0x02	; 2
     ed0:	39 f4       	brne	.+14     	; 0xee0 <main+0x7ae>
     ed2:	52 b8       	out	0x02, r5	; 2
     ed4:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <timeVel>
     ed8:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <timeVel+0x1>
     edc:	d0 da       	rcall	.-2656   	; 0x47e <crankTimer>
     ede:	0c c0       	rjmp	.+24     	; 0xef8 <main+0x7c6>
     ee0:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <stepperStagePosition>
     ee4:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <stepperStagePosition+0x1>
     ee8:	01 97       	sbiw	r24, 0x01	; 1
     eea:	31 f4       	brne	.+12     	; 0xef8 <main+0x7c6>
     eec:	42 b8       	out	0x02, r4	; 2
     eee:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <timeVel>
     ef2:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <timeVel+0x1>
     ef6:	c3 da       	rcall	.-2682   	; 0x47e <crankTimer>
     ef8:	21 96       	adiw	r28, 0x01	; 1
     efa:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <stepperStagePosition>
     efe:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <stepperStagePosition+0x1>
     f02:	01 97       	sbiw	r24, 0x01	; 1
     f04:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <stepperStagePosition+0x1>
     f08:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <stepperStagePosition>
     f0c:	10 92 4d 02 	sts	0x024D, r1	; 0x80024d <__data_end+0x1>
     f10:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <__data_end>
     f14:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <minSteps>
     f18:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <minSteps+0x1>
     f1c:	c8 17       	cp	r28, r24
     f1e:	d9 07       	cpc	r29, r25
     f20:	0c f4       	brge	.+2      	; 0xf24 <main+0x7f2>
     f22:	10 cf       	rjmp	.-480    	; 0xd44 <main+0x612>
     f24:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <desiredPosition>
     f28:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <desiredPosition+0x1>
     f2c:	90 93 5f 02 	sts	0x025F, r25	; 0x80025f <currentPosition+0x1>
     f30:	80 93 5e 02 	sts	0x025E, r24	; 0x80025e <currentPosition>
     f34:	10 92 6b 02 	sts	0x026B, r1	; 0x80026b <stepperStageFlag+0x1>
     f38:	10 92 6a 02 	sts	0x026A, r1	; 0x80026a <stepperStageFlag>
     f3c:	10 92 4f 02 	sts	0x024F, r1	; 0x80024f <INT2_result_flag+0x1>
     f40:	10 92 4e 02 	sts	0x024E, r1	; 0x80024e <INT2_result_flag>
     f44:	4b 9b       	sbis	0x09, 3	; 9
     f46:	05 c0       	rjmp	.+10     	; 0xf52 <main+0x820>
     f48:	ea e7       	ldi	r30, 0x7A	; 122
     f4a:	f0 e0       	ldi	r31, 0x00	; 0
     f4c:	80 81       	ld	r24, Z
     f4e:	80 64       	ori	r24, 0x40	; 64
     f50:	80 83       	st	Z, r24
     f52:	70 92 1d 02 	sts	0x021D, r7	; 0x80021d <velt+0x1>
     f56:	60 92 1c 02 	sts	0x021C, r6	; 0x80021c <velt>
     f5a:	10 92 6b 02 	sts	0x026B, r1	; 0x80026b <stepperStageFlag+0x1>
     f5e:	10 92 6a 02 	sts	0x026A, r1	; 0x80026a <stepperStageFlag>
     f62:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <eStop>
     f66:	90 91 73 02 	lds	r25, 0x0273	; 0x800273 <eStop+0x1>
     f6a:	01 97       	sbiw	r24, 0x01	; 1
     f6c:	49 f4       	brne	.+18     	; 0xf80 <main+0x84e>
     f6e:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <killProgram>
     f72:	90 91 67 02 	lds	r25, 0x0267	; 0x800267 <killProgram+0x1>
     f76:	01 96       	adiw	r24, 0x01	; 1
     f78:	90 93 67 02 	sts	0x0267, r25	; 0x800267 <killProgram+0x1>
     f7c:	80 93 66 02 	sts	0x0266, r24	; 0x800266 <killProgram>
     f80:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <killProgram>
     f84:	90 91 67 02 	lds	r25, 0x0267	; 0x800267 <killProgram+0x1>
     f88:	02 97       	sbiw	r24, 0x02	; 2
     f8a:	09 f0       	breq	.+2      	; 0xf8e <main+0x85c>
     f8c:	76 cc       	rjmp	.-1812   	; 0x87a <main+0x148>
     f8e:	0f 2e       	mov	r0, r31
     f90:	ff e0       	ldi	r31, 0x0F	; 15
     f92:	3f 2e       	mov	r3, r31
     f94:	f0 2d       	mov	r31, r0
     f96:	88 e8       	ldi	r24, 0x88	; 136
     f98:	93 e1       	ldi	r25, 0x13	; 19
     f9a:	1a da       	rcall	.-3020   	; 0x3d0 <mTimer>
     f9c:	35 b8       	out	0x05, r3	; 5
     f9e:	f8 94       	cli
     fa0:	60 e0       	ldi	r22, 0x00	; 0
     fa2:	81 e0       	ldi	r24, 0x01	; 1
     fa4:	f0 d8       	rcall	.-3616   	; 0x186 <LCDByte>
     fa6:	60 e0       	ldi	r22, 0x00	; 0
     fa8:	80 e0       	ldi	r24, 0x00	; 0
     faa:	b2 d9       	rcall	.-3228   	; 0x310 <LCDGotoXY>
     fac:	81 e3       	ldi	r24, 0x31	; 49
     fae:	92 e0       	ldi	r25, 0x02	; 2
     fb0:	44 d9       	rcall	.-3448   	; 0x23a <LCDWriteString>
     fb2:	61 e0       	ldi	r22, 0x01	; 1
     fb4:	80 e0       	ldi	r24, 0x00	; 0
     fb6:	ac d9       	rcall	.-3240   	; 0x310 <LCDGotoXY>
     fb8:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <blCounter>
     fbc:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <blCounter+0x1>
     fc0:	62 e0       	ldi	r22, 0x02	; 2
     fc2:	70 e0       	ldi	r23, 0x00	; 0
     fc4:	49 d9       	rcall	.-3438   	; 0x258 <LCDWriteInt>
     fc6:	61 e0       	ldi	r22, 0x01	; 1
     fc8:	83 e0       	ldi	r24, 0x03	; 3
     fca:	a2 d9       	rcall	.-3260   	; 0x310 <LCDGotoXY>
     fcc:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <whCounter>
     fd0:	90 91 61 02 	lds	r25, 0x0261	; 0x800261 <whCounter+0x1>
     fd4:	62 e0       	ldi	r22, 0x02	; 2
     fd6:	70 e0       	ldi	r23, 0x00	; 0
     fd8:	3f d9       	rcall	.-3458   	; 0x258 <LCDWriteInt>
     fda:	61 e0       	ldi	r22, 0x01	; 1
     fdc:	86 e0       	ldi	r24, 0x06	; 6
     fde:	98 d9       	rcall	.-3280   	; 0x310 <LCDGotoXY>
     fe0:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <stCounter>
     fe4:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <stCounter+0x1>
     fe8:	62 e0       	ldi	r22, 0x02	; 2
     fea:	70 e0       	ldi	r23, 0x00	; 0
     fec:	35 d9       	rcall	.-3478   	; 0x258 <LCDWriteInt>
     fee:	61 e0       	ldi	r22, 0x01	; 1
     ff0:	89 e0       	ldi	r24, 0x09	; 9
     ff2:	8e d9       	rcall	.-3300   	; 0x310 <LCDGotoXY>
     ff4:	80 91 70 02 	lds	r24, 0x0270	; 0x800270 <alCounter>
     ff8:	90 91 71 02 	lds	r25, 0x0271	; 0x800271 <alCounter+0x1>
     ffc:	62 e0       	ldi	r22, 0x02	; 2
     ffe:	70 e0       	ldi	r23, 0x00	; 0
    1000:	2b d9       	rcall	.-3498   	; 0x258 <LCDWriteInt>
    1002:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <killProgram>
    1006:	90 91 67 02 	lds	r25, 0x0267	; 0x800267 <killProgram+0x1>
    100a:	02 97       	sbiw	r24, 0x02	; 2
    100c:	09 f4       	brne	.+2      	; 0x1010 <main+0x8de>
    100e:	c3 cf       	rjmp	.-122    	; 0xf96 <main+0x864>
    1010:	34 cc       	rjmp	.-1944   	; 0x87a <main+0x148>

00001012 <size>:
	link 	*temp;			/* will store the link while traversing the queue */
	int 	numElements;

	numElements = 0;

	temp = *h;			/* point to the first item in the list */
    1012:	dc 01       	movw	r26, r24
    1014:	ed 91       	ld	r30, X+
    1016:	fc 91       	ld	r31, X

	while(temp != NULL){
    1018:	30 97       	sbiw	r30, 0x00	; 0
    101a:	49 f0       	breq	.+18     	; 0x102e <size+0x1c>
    101c:	80 e0       	ldi	r24, 0x00	; 0
    101e:	90 e0       	ldi	r25, 0x00	; 0
		numElements++;
    1020:	01 96       	adiw	r24, 0x01	; 1
		temp = temp->next;
    1022:	02 80       	ldd	r0, Z+2	; 0x02
    1024:	f3 81       	ldd	r31, Z+3	; 0x03
    1026:	e0 2d       	mov	r30, r0

	numElements = 0;

	temp = *h;			/* point to the first item in the list */

	while(temp != NULL){
    1028:	30 97       	sbiw	r30, 0x00	; 0
    102a:	d1 f7       	brne	.-12     	; 0x1020 <size+0xe>
    102c:	08 95       	ret
int size(link **h, link **t){

	link 	*temp;			/* will store the link while traversing the queue */
	int 	numElements;

	numElements = 0;
    102e:	80 e0       	ldi	r24, 0x00	; 0
    1030:	90 e0       	ldi	r25, 0x00	; 0
		numElements++;
		temp = temp->next;
	}/*while*/
	
	return(numElements);
}/*size*/
    1032:	08 95       	ret

00001034 <__vector_1>:


/*Interrupt Vector for pause button, Active Low. Program enters this once the button is depressed
 Outputs total sorted quantity of each type of object and amount in queue. Program clears LCD and 
 resumes sorting process when pushed again */
ISR(INT0_vect){ 
    1034:	1f 92       	push	r1
    1036:	0f 92       	push	r0
    1038:	0f b6       	in	r0, 0x3f	; 63
    103a:	0f 92       	push	r0
    103c:	11 24       	eor	r1, r1
    103e:	0b b6       	in	r0, 0x3b	; 59
    1040:	0f 92       	push	r0
    1042:	2f 93       	push	r18
    1044:	3f 93       	push	r19
    1046:	4f 93       	push	r20
    1048:	5f 93       	push	r21
    104a:	6f 93       	push	r22
    104c:	7f 93       	push	r23
    104e:	8f 93       	push	r24
    1050:	9f 93       	push	r25
    1052:	af 93       	push	r26
    1054:	bf 93       	push	r27
    1056:	ef 93       	push	r30
    1058:	ff 93       	push	r31
	mTimer(20); //debounce
    105a:	84 e1       	ldi	r24, 0x14	; 20
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	b8 d9       	rcall	.-3216   	; 0x3d0 <mTimer>
	if((0b00000001&PIND) == 0){
    1060:	48 99       	sbic	0x09, 0	; 9
    1062:	52 c0       	rjmp	.+164    	; 0x1108 <__vector_1+0xd4>
		if(pauseButton == 1){ //pause
    1064:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <pauseButton>
    1068:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <pauseButton+0x1>
    106c:	01 97       	sbiw	r24, 0x01	; 1
    106e:	09 f0       	breq	.+2      	; 0x1072 <__vector_1+0x3e>
    1070:	40 c0       	rjmp	.+128    	; 0x10f2 <__vector_1+0xbe>
			PORTB = stop; //Stops DC motor
    1072:	8f e0       	ldi	r24, 0x0F	; 15
    1074:	85 b9       	out	0x05, r24	; 5
			
			//LCD printing for qty. sorted
			LCDWriteStringXY(0,0,"BL WH ST AL PS"); 
    1076:	60 e0       	ldi	r22, 0x00	; 0
    1078:	80 e0       	ldi	r24, 0x00	; 0
    107a:	4a d9       	rcall	.-3436   	; 0x310 <LCDGotoXY>
    107c:	8d e3       	ldi	r24, 0x3D	; 61
    107e:	92 e0       	ldi	r25, 0x02	; 2
    1080:	dc d8       	rcall	.-3656   	; 0x23a <LCDWriteString>
			LCDWriteIntXY(0,1,blCounter, 2); 
    1082:	61 e0       	ldi	r22, 0x01	; 1
    1084:	80 e0       	ldi	r24, 0x00	; 0
    1086:	44 d9       	rcall	.-3448   	; 0x310 <LCDGotoXY>
    1088:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <blCounter>
    108c:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <blCounter+0x1>
    1090:	62 e0       	ldi	r22, 0x02	; 2
    1092:	70 e0       	ldi	r23, 0x00	; 0
    1094:	e1 d8       	rcall	.-3646   	; 0x258 <LCDWriteInt>
			LCDWriteIntXY(3,1,whCounter, 2); 
    1096:	61 e0       	ldi	r22, 0x01	; 1
    1098:	83 e0       	ldi	r24, 0x03	; 3
    109a:	3a d9       	rcall	.-3468   	; 0x310 <LCDGotoXY>
    109c:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <whCounter>
    10a0:	90 91 61 02 	lds	r25, 0x0261	; 0x800261 <whCounter+0x1>
    10a4:	62 e0       	ldi	r22, 0x02	; 2
    10a6:	70 e0       	ldi	r23, 0x00	; 0
    10a8:	d7 d8       	rcall	.-3666   	; 0x258 <LCDWriteInt>
			LCDWriteIntXY(6,1,stCounter, 2);
    10aa:	61 e0       	ldi	r22, 0x01	; 1
    10ac:	86 e0       	ldi	r24, 0x06	; 6
    10ae:	30 d9       	rcall	.-3488   	; 0x310 <LCDGotoXY>
    10b0:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <stCounter>
    10b4:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <stCounter+0x1>
    10b8:	62 e0       	ldi	r22, 0x02	; 2
    10ba:	70 e0       	ldi	r23, 0x00	; 0
    10bc:	cd d8       	rcall	.-3686   	; 0x258 <LCDWriteInt>
			LCDWriteIntXY(9,1,alCounter, 2); 
    10be:	61 e0       	ldi	r22, 0x01	; 1
    10c0:	89 e0       	ldi	r24, 0x09	; 9
    10c2:	26 d9       	rcall	.-3508   	; 0x310 <LCDGotoXY>
    10c4:	80 91 70 02 	lds	r24, 0x0270	; 0x800270 <alCounter>
    10c8:	90 91 71 02 	lds	r25, 0x0271	; 0x800271 <alCounter+0x1>
    10cc:	62 e0       	ldi	r22, 0x02	; 2
    10ce:	70 e0       	ldi	r23, 0x00	; 0
			LCDWriteIntXY(12,1,size(&head, &tail), 2); //For number of items in linkedlist (detected but not sorted)
    10d0:	c3 d8       	rcall	.-3706   	; 0x258 <LCDWriteInt>
    10d2:	61 e0       	ldi	r22, 0x01	; 1
    10d4:	8c e0       	ldi	r24, 0x0C	; 12
    10d6:	1c d9       	rcall	.-3528   	; 0x310 <LCDGotoXY>
    10d8:	6a e5       	ldi	r22, 0x5A	; 90
    10da:	72 e0       	ldi	r23, 0x02	; 2
    10dc:	82 e6       	ldi	r24, 0x62	; 98
    10de:	92 e0       	ldi	r25, 0x02	; 2
    10e0:	98 df       	rcall	.-208    	; 0x1012 <size>
    10e2:	62 e0       	ldi	r22, 0x02	; 2
    10e4:	70 e0       	ldi	r23, 0x00	; 0
    10e6:	b8 d8       	rcall	.-3728   	; 0x258 <LCDWriteInt>
    10e8:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <pauseButton+0x1>
			pauseButton = 0; //set to zero so next push resumes belt
    10ec:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <pauseButton>
    10f0:	0b c0       	rjmp	.+22     	; 0x1108 <__vector_1+0xd4>
    10f2:	60 e0       	ldi	r22, 0x00	; 0
		}else{ //resume
			LCDClear(); //Clear the screen
    10f4:	81 e0       	ldi	r24, 0x01	; 1
    10f6:	47 d8       	rcall	.-3954   	; 0x186 <LCDByte>
    10f8:	81 e0       	ldi	r24, 0x01	; 1
			pauseButton = 1; //Set to 1 so next push is pause belt
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <pauseButton+0x1>
    1100:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <pauseButton>
    1104:	87 e0       	ldi	r24, 0x07	; 7
			PORTB = counterClockwise;
    1106:	85 b9       	out	0x05, r24	; 5
    1108:	48 9b       	sbis	0x09, 0	; 9
		}//else
	}//if
	
	//debounce
	while((0b00000001&PIND) == 0); 
    110a:	fe cf       	rjmp	.-4      	; 0x1108 <__vector_1+0xd4>
    110c:	84 e1       	ldi	r24, 0x14	; 20
		mTimer(20);
    110e:	90 e0       	ldi	r25, 0x00	; 0
    1110:	5f d9       	rcall	.-3394   	; 0x3d0 <mTimer>
    1112:	ff 91       	pop	r31
    1114:	ef 91       	pop	r30
	
}//INT0
    1116:	bf 91       	pop	r27
    1118:	af 91       	pop	r26
    111a:	9f 91       	pop	r25
    111c:	8f 91       	pop	r24
    111e:	7f 91       	pop	r23
    1120:	6f 91       	pop	r22
    1122:	5f 91       	pop	r21
    1124:	4f 91       	pop	r20
    1126:	3f 91       	pop	r19
    1128:	2f 91       	pop	r18
    112a:	0f 90       	pop	r0
    112c:	0b be       	out	0x3b, r0	; 59
    112e:	0f 90       	pop	r0
    1130:	0f be       	out	0x3f, r0	; 63
    1132:	0f 90       	pop	r0
    1134:	1f 90       	pop	r1
    1136:	18 95       	reti

00001138 <__divmodhi4>:
    1138:	97 fb       	bst	r25, 7
    113a:	07 2e       	mov	r0, r23
    113c:	16 f4       	brtc	.+4      	; 0x1142 <__divmodhi4+0xa>
    113e:	00 94       	com	r0
    1140:	06 d0       	rcall	.+12     	; 0x114e <__divmodhi4_neg1>
    1142:	77 fd       	sbrc	r23, 7
    1144:	08 d0       	rcall	.+16     	; 0x1156 <__divmodhi4_neg2>
    1146:	0b d0       	rcall	.+22     	; 0x115e <__udivmodhi4>
    1148:	07 fc       	sbrc	r0, 7
    114a:	05 d0       	rcall	.+10     	; 0x1156 <__divmodhi4_neg2>
    114c:	3e f4       	brtc	.+14     	; 0x115c <__divmodhi4_exit>

0000114e <__divmodhi4_neg1>:
    114e:	90 95       	com	r25
    1150:	81 95       	neg	r24
    1152:	9f 4f       	sbci	r25, 0xFF	; 255
    1154:	08 95       	ret

00001156 <__divmodhi4_neg2>:
    1156:	70 95       	com	r23
    1158:	61 95       	neg	r22
    115a:	7f 4f       	sbci	r23, 0xFF	; 255

0000115c <__divmodhi4_exit>:
    115c:	08 95       	ret

0000115e <__udivmodhi4>:
    115e:	aa 1b       	sub	r26, r26
    1160:	bb 1b       	sub	r27, r27
    1162:	51 e1       	ldi	r21, 0x11	; 17
    1164:	07 c0       	rjmp	.+14     	; 0x1174 <__udivmodhi4_ep>

00001166 <__udivmodhi4_loop>:
    1166:	aa 1f       	adc	r26, r26
    1168:	bb 1f       	adc	r27, r27
    116a:	a6 17       	cp	r26, r22
    116c:	b7 07       	cpc	r27, r23
    116e:	10 f0       	brcs	.+4      	; 0x1174 <__udivmodhi4_ep>
    1170:	a6 1b       	sub	r26, r22
    1172:	b7 0b       	sbc	r27, r23

00001174 <__udivmodhi4_ep>:
    1174:	88 1f       	adc	r24, r24
    1176:	99 1f       	adc	r25, r25
    1178:	5a 95       	dec	r21
    117a:	a9 f7       	brne	.-22     	; 0x1166 <__udivmodhi4_loop>
    117c:	80 95       	com	r24
    117e:	90 95       	com	r25
    1180:	bc 01       	movw	r22, r24
    1182:	cd 01       	movw	r24, r26
    1184:	08 95       	ret

00001186 <malloc>:
    1186:	0f 93       	push	r16
    1188:	1f 93       	push	r17
    118a:	cf 93       	push	r28
    118c:	df 93       	push	r29
    118e:	82 30       	cpi	r24, 0x02	; 2
    1190:	91 05       	cpc	r25, r1
    1192:	10 f4       	brcc	.+4      	; 0x1198 <malloc+0x12>
    1194:	82 e0       	ldi	r24, 0x02	; 2
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	e0 91 82 02 	lds	r30, 0x0282	; 0x800282 <__flp>
    119c:	f0 91 83 02 	lds	r31, 0x0283	; 0x800283 <__flp+0x1>
    11a0:	20 e0       	ldi	r18, 0x00	; 0
    11a2:	30 e0       	ldi	r19, 0x00	; 0
    11a4:	a0 e0       	ldi	r26, 0x00	; 0
    11a6:	b0 e0       	ldi	r27, 0x00	; 0
    11a8:	30 97       	sbiw	r30, 0x00	; 0
    11aa:	19 f1       	breq	.+70     	; 0x11f2 <malloc+0x6c>
    11ac:	40 81       	ld	r20, Z
    11ae:	51 81       	ldd	r21, Z+1	; 0x01
    11b0:	02 81       	ldd	r16, Z+2	; 0x02
    11b2:	13 81       	ldd	r17, Z+3	; 0x03
    11b4:	48 17       	cp	r20, r24
    11b6:	59 07       	cpc	r21, r25
    11b8:	c8 f0       	brcs	.+50     	; 0x11ec <malloc+0x66>
    11ba:	84 17       	cp	r24, r20
    11bc:	95 07       	cpc	r25, r21
    11be:	69 f4       	brne	.+26     	; 0x11da <malloc+0x54>
    11c0:	10 97       	sbiw	r26, 0x00	; 0
    11c2:	31 f0       	breq	.+12     	; 0x11d0 <malloc+0x4a>
    11c4:	12 96       	adiw	r26, 0x02	; 2
    11c6:	0c 93       	st	X, r16
    11c8:	12 97       	sbiw	r26, 0x02	; 2
    11ca:	13 96       	adiw	r26, 0x03	; 3
    11cc:	1c 93       	st	X, r17
    11ce:	27 c0       	rjmp	.+78     	; 0x121e <malloc+0x98>
    11d0:	00 93 82 02 	sts	0x0282, r16	; 0x800282 <__flp>
    11d4:	10 93 83 02 	sts	0x0283, r17	; 0x800283 <__flp+0x1>
    11d8:	22 c0       	rjmp	.+68     	; 0x121e <malloc+0x98>
    11da:	21 15       	cp	r18, r1
    11dc:	31 05       	cpc	r19, r1
    11de:	19 f0       	breq	.+6      	; 0x11e6 <malloc+0x60>
    11e0:	42 17       	cp	r20, r18
    11e2:	53 07       	cpc	r21, r19
    11e4:	18 f4       	brcc	.+6      	; 0x11ec <malloc+0x66>
    11e6:	9a 01       	movw	r18, r20
    11e8:	bd 01       	movw	r22, r26
    11ea:	ef 01       	movw	r28, r30
    11ec:	df 01       	movw	r26, r30
    11ee:	f8 01       	movw	r30, r16
    11f0:	db cf       	rjmp	.-74     	; 0x11a8 <malloc+0x22>
    11f2:	21 15       	cp	r18, r1
    11f4:	31 05       	cpc	r19, r1
    11f6:	f9 f0       	breq	.+62     	; 0x1236 <malloc+0xb0>
    11f8:	28 1b       	sub	r18, r24
    11fa:	39 0b       	sbc	r19, r25
    11fc:	24 30       	cpi	r18, 0x04	; 4
    11fe:	31 05       	cpc	r19, r1
    1200:	80 f4       	brcc	.+32     	; 0x1222 <malloc+0x9c>
    1202:	8a 81       	ldd	r24, Y+2	; 0x02
    1204:	9b 81       	ldd	r25, Y+3	; 0x03
    1206:	61 15       	cp	r22, r1
    1208:	71 05       	cpc	r23, r1
    120a:	21 f0       	breq	.+8      	; 0x1214 <malloc+0x8e>
    120c:	fb 01       	movw	r30, r22
    120e:	93 83       	std	Z+3, r25	; 0x03
    1210:	82 83       	std	Z+2, r24	; 0x02
    1212:	04 c0       	rjmp	.+8      	; 0x121c <malloc+0x96>
    1214:	90 93 83 02 	sts	0x0283, r25	; 0x800283 <__flp+0x1>
    1218:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <__flp>
    121c:	fe 01       	movw	r30, r28
    121e:	32 96       	adiw	r30, 0x02	; 2
    1220:	44 c0       	rjmp	.+136    	; 0x12aa <malloc+0x124>
    1222:	fe 01       	movw	r30, r28
    1224:	e2 0f       	add	r30, r18
    1226:	f3 1f       	adc	r31, r19
    1228:	81 93       	st	Z+, r24
    122a:	91 93       	st	Z+, r25
    122c:	22 50       	subi	r18, 0x02	; 2
    122e:	31 09       	sbc	r19, r1
    1230:	39 83       	std	Y+1, r19	; 0x01
    1232:	28 83       	st	Y, r18
    1234:	3a c0       	rjmp	.+116    	; 0x12aa <malloc+0x124>
    1236:	20 91 80 02 	lds	r18, 0x0280	; 0x800280 <__brkval>
    123a:	30 91 81 02 	lds	r19, 0x0281	; 0x800281 <__brkval+0x1>
    123e:	23 2b       	or	r18, r19
    1240:	41 f4       	brne	.+16     	; 0x1252 <malloc+0xcc>
    1242:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    1246:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    124a:	30 93 81 02 	sts	0x0281, r19	; 0x800281 <__brkval+0x1>
    124e:	20 93 80 02 	sts	0x0280, r18	; 0x800280 <__brkval>
    1252:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    1256:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    125a:	21 15       	cp	r18, r1
    125c:	31 05       	cpc	r19, r1
    125e:	41 f4       	brne	.+16     	; 0x1270 <malloc+0xea>
    1260:	2d b7       	in	r18, 0x3d	; 61
    1262:	3e b7       	in	r19, 0x3e	; 62
    1264:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    1268:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    126c:	24 1b       	sub	r18, r20
    126e:	35 0b       	sbc	r19, r21
    1270:	e0 91 80 02 	lds	r30, 0x0280	; 0x800280 <__brkval>
    1274:	f0 91 81 02 	lds	r31, 0x0281	; 0x800281 <__brkval+0x1>
    1278:	e2 17       	cp	r30, r18
    127a:	f3 07       	cpc	r31, r19
    127c:	a0 f4       	brcc	.+40     	; 0x12a6 <malloc+0x120>
    127e:	2e 1b       	sub	r18, r30
    1280:	3f 0b       	sbc	r19, r31
    1282:	28 17       	cp	r18, r24
    1284:	39 07       	cpc	r19, r25
    1286:	78 f0       	brcs	.+30     	; 0x12a6 <malloc+0x120>
    1288:	ac 01       	movw	r20, r24
    128a:	4e 5f       	subi	r20, 0xFE	; 254
    128c:	5f 4f       	sbci	r21, 0xFF	; 255
    128e:	24 17       	cp	r18, r20
    1290:	35 07       	cpc	r19, r21
    1292:	48 f0       	brcs	.+18     	; 0x12a6 <malloc+0x120>
    1294:	4e 0f       	add	r20, r30
    1296:	5f 1f       	adc	r21, r31
    1298:	50 93 81 02 	sts	0x0281, r21	; 0x800281 <__brkval+0x1>
    129c:	40 93 80 02 	sts	0x0280, r20	; 0x800280 <__brkval>
    12a0:	81 93       	st	Z+, r24
    12a2:	91 93       	st	Z+, r25
    12a4:	02 c0       	rjmp	.+4      	; 0x12aa <malloc+0x124>
    12a6:	e0 e0       	ldi	r30, 0x00	; 0
    12a8:	f0 e0       	ldi	r31, 0x00	; 0
    12aa:	cf 01       	movw	r24, r30
    12ac:	df 91       	pop	r29
    12ae:	cf 91       	pop	r28
    12b0:	1f 91       	pop	r17
    12b2:	0f 91       	pop	r16
    12b4:	08 95       	ret

000012b6 <free>:
    12b6:	cf 93       	push	r28
    12b8:	df 93       	push	r29
    12ba:	00 97       	sbiw	r24, 0x00	; 0
    12bc:	09 f4       	brne	.+2      	; 0x12c0 <free+0xa>
    12be:	81 c0       	rjmp	.+258    	; 0x13c2 <free+0x10c>
    12c0:	fc 01       	movw	r30, r24
    12c2:	32 97       	sbiw	r30, 0x02	; 2
    12c4:	13 82       	std	Z+3, r1	; 0x03
    12c6:	12 82       	std	Z+2, r1	; 0x02
    12c8:	a0 91 82 02 	lds	r26, 0x0282	; 0x800282 <__flp>
    12cc:	b0 91 83 02 	lds	r27, 0x0283	; 0x800283 <__flp+0x1>
    12d0:	10 97       	sbiw	r26, 0x00	; 0
    12d2:	81 f4       	brne	.+32     	; 0x12f4 <free+0x3e>
    12d4:	20 81       	ld	r18, Z
    12d6:	31 81       	ldd	r19, Z+1	; 0x01
    12d8:	82 0f       	add	r24, r18
    12da:	93 1f       	adc	r25, r19
    12dc:	20 91 80 02 	lds	r18, 0x0280	; 0x800280 <__brkval>
    12e0:	30 91 81 02 	lds	r19, 0x0281	; 0x800281 <__brkval+0x1>
    12e4:	28 17       	cp	r18, r24
    12e6:	39 07       	cpc	r19, r25
    12e8:	51 f5       	brne	.+84     	; 0x133e <free+0x88>
    12ea:	f0 93 81 02 	sts	0x0281, r31	; 0x800281 <__brkval+0x1>
    12ee:	e0 93 80 02 	sts	0x0280, r30	; 0x800280 <__brkval>
    12f2:	67 c0       	rjmp	.+206    	; 0x13c2 <free+0x10c>
    12f4:	ed 01       	movw	r28, r26
    12f6:	20 e0       	ldi	r18, 0x00	; 0
    12f8:	30 e0       	ldi	r19, 0x00	; 0
    12fa:	ce 17       	cp	r28, r30
    12fc:	df 07       	cpc	r29, r31
    12fe:	40 f4       	brcc	.+16     	; 0x1310 <free+0x5a>
    1300:	4a 81       	ldd	r20, Y+2	; 0x02
    1302:	5b 81       	ldd	r21, Y+3	; 0x03
    1304:	9e 01       	movw	r18, r28
    1306:	41 15       	cp	r20, r1
    1308:	51 05       	cpc	r21, r1
    130a:	f1 f0       	breq	.+60     	; 0x1348 <free+0x92>
    130c:	ea 01       	movw	r28, r20
    130e:	f5 cf       	rjmp	.-22     	; 0x12fa <free+0x44>
    1310:	d3 83       	std	Z+3, r29	; 0x03
    1312:	c2 83       	std	Z+2, r28	; 0x02
    1314:	40 81       	ld	r20, Z
    1316:	51 81       	ldd	r21, Z+1	; 0x01
    1318:	84 0f       	add	r24, r20
    131a:	95 1f       	adc	r25, r21
    131c:	c8 17       	cp	r28, r24
    131e:	d9 07       	cpc	r29, r25
    1320:	59 f4       	brne	.+22     	; 0x1338 <free+0x82>
    1322:	88 81       	ld	r24, Y
    1324:	99 81       	ldd	r25, Y+1	; 0x01
    1326:	84 0f       	add	r24, r20
    1328:	95 1f       	adc	r25, r21
    132a:	02 96       	adiw	r24, 0x02	; 2
    132c:	91 83       	std	Z+1, r25	; 0x01
    132e:	80 83       	st	Z, r24
    1330:	8a 81       	ldd	r24, Y+2	; 0x02
    1332:	9b 81       	ldd	r25, Y+3	; 0x03
    1334:	93 83       	std	Z+3, r25	; 0x03
    1336:	82 83       	std	Z+2, r24	; 0x02
    1338:	21 15       	cp	r18, r1
    133a:	31 05       	cpc	r19, r1
    133c:	29 f4       	brne	.+10     	; 0x1348 <free+0x92>
    133e:	f0 93 83 02 	sts	0x0283, r31	; 0x800283 <__flp+0x1>
    1342:	e0 93 82 02 	sts	0x0282, r30	; 0x800282 <__flp>
    1346:	3d c0       	rjmp	.+122    	; 0x13c2 <free+0x10c>
    1348:	e9 01       	movw	r28, r18
    134a:	fb 83       	std	Y+3, r31	; 0x03
    134c:	ea 83       	std	Y+2, r30	; 0x02
    134e:	49 91       	ld	r20, Y+
    1350:	59 91       	ld	r21, Y+
    1352:	c4 0f       	add	r28, r20
    1354:	d5 1f       	adc	r29, r21
    1356:	ec 17       	cp	r30, r28
    1358:	fd 07       	cpc	r31, r29
    135a:	61 f4       	brne	.+24     	; 0x1374 <free+0xbe>
    135c:	80 81       	ld	r24, Z
    135e:	91 81       	ldd	r25, Z+1	; 0x01
    1360:	84 0f       	add	r24, r20
    1362:	95 1f       	adc	r25, r21
    1364:	02 96       	adiw	r24, 0x02	; 2
    1366:	e9 01       	movw	r28, r18
    1368:	99 83       	std	Y+1, r25	; 0x01
    136a:	88 83       	st	Y, r24
    136c:	82 81       	ldd	r24, Z+2	; 0x02
    136e:	93 81       	ldd	r25, Z+3	; 0x03
    1370:	9b 83       	std	Y+3, r25	; 0x03
    1372:	8a 83       	std	Y+2, r24	; 0x02
    1374:	e0 e0       	ldi	r30, 0x00	; 0
    1376:	f0 e0       	ldi	r31, 0x00	; 0
    1378:	12 96       	adiw	r26, 0x02	; 2
    137a:	8d 91       	ld	r24, X+
    137c:	9c 91       	ld	r25, X
    137e:	13 97       	sbiw	r26, 0x03	; 3
    1380:	00 97       	sbiw	r24, 0x00	; 0
    1382:	19 f0       	breq	.+6      	; 0x138a <free+0xd4>
    1384:	fd 01       	movw	r30, r26
    1386:	dc 01       	movw	r26, r24
    1388:	f7 cf       	rjmp	.-18     	; 0x1378 <free+0xc2>
    138a:	8d 91       	ld	r24, X+
    138c:	9c 91       	ld	r25, X
    138e:	11 97       	sbiw	r26, 0x01	; 1
    1390:	9d 01       	movw	r18, r26
    1392:	2e 5f       	subi	r18, 0xFE	; 254
    1394:	3f 4f       	sbci	r19, 0xFF	; 255
    1396:	82 0f       	add	r24, r18
    1398:	93 1f       	adc	r25, r19
    139a:	20 91 80 02 	lds	r18, 0x0280	; 0x800280 <__brkval>
    139e:	30 91 81 02 	lds	r19, 0x0281	; 0x800281 <__brkval+0x1>
    13a2:	28 17       	cp	r18, r24
    13a4:	39 07       	cpc	r19, r25
    13a6:	69 f4       	brne	.+26     	; 0x13c2 <free+0x10c>
    13a8:	30 97       	sbiw	r30, 0x00	; 0
    13aa:	29 f4       	brne	.+10     	; 0x13b6 <free+0x100>
    13ac:	10 92 83 02 	sts	0x0283, r1	; 0x800283 <__flp+0x1>
    13b0:	10 92 82 02 	sts	0x0282, r1	; 0x800282 <__flp>
    13b4:	02 c0       	rjmp	.+4      	; 0x13ba <free+0x104>
    13b6:	13 82       	std	Z+3, r1	; 0x03
    13b8:	12 82       	std	Z+2, r1	; 0x02
    13ba:	b0 93 81 02 	sts	0x0281, r27	; 0x800281 <__brkval+0x1>
    13be:	a0 93 80 02 	sts	0x0280, r26	; 0x800280 <__brkval>
    13c2:	df 91       	pop	r29
    13c4:	cf 91       	pop	r28
    13c6:	08 95       	ret

000013c8 <_exit>:
    13c8:	f8 94       	cli

000013ca <__stop_program>:
    13ca:	ff cf       	rjmp	.-2      	; 0x13ca <__stop_program>
